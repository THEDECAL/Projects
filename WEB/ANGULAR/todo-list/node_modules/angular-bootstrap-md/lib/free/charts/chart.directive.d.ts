import { OnDestroy, OnInit, OnChanges, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';
import { Colors } from './colors.interface';
import * as ɵngcc0 from '@angular/core';
export declare class BaseChartDirective implements OnDestroy, OnChanges, OnInit, Colors {
    element: ElementRef;
    static defaultColors: Array<number[]>;
    data: number[] | any[];
    datasets: any[];
    labels: Array<any>;
    options: any;
    chartType: string;
    colors: Array<any>;
    legend: boolean;
    chartClick: EventEmitter<any>;
    chartHover: EventEmitter<any>;
    ctx: any;
    chart: any;
    cvs: any;
    initFlag: boolean;
    isBrowser: any;
    constructor(element: ElementRef, platformId: string);
    ngOnInit(): any;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): any;
    getChartBuilder(ctx: any): any;
    getPointDataAtEvent(event: any): any;
    private updateChartData;
    private getDatasets;
    private refresh;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BaseChartDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<BaseChartDirective, "canvas[mdbChart]", ["mdb-base-chart"], { "labels": "labels"; "options": "options"; "legend": "legend"; "data": "data"; "datasets": "datasets"; "chartType": "chartType"; "colors": "colors"; }, { "chartClick": "chartClick"; "chartHover": "chartHover"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImNoYXJ0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIE9uSW5pdCwgT25DaGFuZ2VzLCBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbG9ycyB9IGZyb20gJy4vY29sb3JzLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCYXNlQ2hhcnREaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uQ2hhbmdlcywgT25Jbml0LCBDb2xvcnMge1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgc3RhdGljIGRlZmF1bHRDb2xvcnM6IEFycmF5PG51bWJlcltdPjtcbiAgICBkYXRhOiBudW1iZXJbXSB8IGFueVtdO1xuICAgIGRhdGFzZXRzOiBhbnlbXTtcbiAgICBsYWJlbHM6IEFycmF5PGFueT47XG4gICAgb3B0aW9uczogYW55O1xuICAgIGNoYXJ0VHlwZTogc3RyaW5nO1xuICAgIGNvbG9yczogQXJyYXk8YW55PjtcbiAgICBsZWdlbmQ6IGJvb2xlYW47XG4gICAgY2hhcnRDbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY2hhcnRIb3ZlcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY3R4OiBhbnk7XG4gICAgY2hhcnQ6IGFueTtcbiAgICBjdnM6IGFueTtcbiAgICBpbml0RmxhZzogYm9vbGVhbjtcbiAgICBpc0Jyb3dzZXI6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCBwbGF0Zm9ybUlkOiBzdHJpbmcpO1xuICAgIG5nT25Jbml0KCk6IGFueTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiBhbnk7XG4gICAgZ2V0Q2hhcnRCdWlsZGVyKGN0eDogYW55KTogYW55O1xuICAgIGdldFBvaW50RGF0YUF0RXZlbnQoZXZlbnQ6IGFueSk6IGFueTtcbiAgICBwcml2YXRlIHVwZGF0ZUNoYXJ0RGF0YTtcbiAgICBwcml2YXRlIGdldERhdGFzZXRzO1xuICAgIHByaXZhdGUgcmVmcmVzaDtcbn1cbiJdfQ==