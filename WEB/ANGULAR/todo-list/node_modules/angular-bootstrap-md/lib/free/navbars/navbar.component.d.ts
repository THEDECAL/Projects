import { NavbarService } from './navbar.service';
import { AfterContentChecked, AfterViewInit, ElementRef, OnInit, Renderer2, ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';
import { LinksComponent } from './links.component';
import * as ɵngcc0 from '@angular/core';
export declare class NavbarComponent implements AfterViewInit, OnInit, AfterContentChecked, OnDestroy {
    renderer: Renderer2;
    private _navbarService;
    private _cdRef;
    private _ngZone;
    private _document;
    iconBackground: string | string[];
    SideClass: string;
    containerInside: boolean;
    collapseId: string;
    scrollSensitivity: number;
    scrollableNavbar: boolean;
    private _destroy$;
    navbarLinkClicks: any;
    shown: boolean;
    doubleNav: boolean;
    height: number;
    duration: number;
    collapse: boolean;
    showClass: boolean;
    collapsing: boolean;
    private _itemsLength;
    ariaExpanded: boolean;
    el: ElementRef;
    mobile: ElementRef;
    navbar: ElementRef;
    container: ElementRef;
    toggler: ElementRef;
    links: LinksComponent;
    constructor(renderer: Renderer2, _navbarService: NavbarService, _cdRef: ChangeDetectorRef, _ngZone: NgZone, _document: any);
    closeNavbarOnClick(navbarLinkClicks: any): void;
    addTogglerIconClasses(): void;
    private _listenToScroll;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    toggle(): void;
    show(): void;
    hide(): void;
    get displayStyle(): "" | "flex";
    onResize(event: any): void;
    ngAfterContentChecked(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavbarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NavbarComponent, "mdb-navbar", never, { "containerInside": "containerInside"; "collapseId": "collapseId"; "scrollSensitivity": "scrollSensitivity"; "scrollableNavbar": "scrollableNavbar"; "iconBackground": "iconBackground"; "SideClass": "SideClass"; }, {}, ["links"], ["mdb-navbar-brand", "logo", "*", "navlinks", "links"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuYXZiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXZiYXJTZXJ2aWNlIH0gZnJvbSAnLi9uYXZiYXIuc2VydmljZSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRDaGVja2VkLCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMaW5rc0NvbXBvbmVudCB9IGZyb20gJy4vbGlua3MuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdmJhckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uSW5pdCwgQWZ0ZXJDb250ZW50Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgX25hdmJhclNlcnZpY2U7XG4gICAgcHJpdmF0ZSBfY2RSZWY7XG4gICAgcHJpdmF0ZSBfbmdab25lO1xuICAgIHByaXZhdGUgX2RvY3VtZW50O1xuICAgIGljb25CYWNrZ3JvdW5kOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICBTaWRlQ2xhc3M6IHN0cmluZztcbiAgICBjb250YWluZXJJbnNpZGU6IGJvb2xlYW47XG4gICAgY29sbGFwc2VJZDogc3RyaW5nO1xuICAgIHNjcm9sbFNlbnNpdGl2aXR5OiBudW1iZXI7XG4gICAgc2Nyb2xsYWJsZU5hdmJhcjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9kZXN0cm95JDtcbiAgICBuYXZiYXJMaW5rQ2xpY2tzOiBhbnk7XG4gICAgc2hvd246IGJvb2xlYW47XG4gICAgZG91YmxlTmF2OiBib29sZWFuO1xuICAgIGhlaWdodDogbnVtYmVyO1xuICAgIGR1cmF0aW9uOiBudW1iZXI7XG4gICAgY29sbGFwc2U6IGJvb2xlYW47XG4gICAgc2hvd0NsYXNzOiBib29sZWFuO1xuICAgIGNvbGxhcHNpbmc6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfaXRlbXNMZW5ndGg7XG4gICAgYXJpYUV4cGFuZGVkOiBib29sZWFuO1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIG1vYmlsZTogRWxlbWVudFJlZjtcbiAgICBuYXZiYXI6IEVsZW1lbnRSZWY7XG4gICAgY29udGFpbmVyOiBFbGVtZW50UmVmO1xuICAgIHRvZ2dsZXI6IEVsZW1lbnRSZWY7XG4gICAgbGlua3M6IExpbmtzQ29tcG9uZW50O1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIF9uYXZiYXJTZXJ2aWNlOiBOYXZiYXJTZXJ2aWNlLCBfY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCBfbmdab25lOiBOZ1pvbmUsIF9kb2N1bWVudDogYW55KTtcbiAgICBjbG9zZU5hdmJhck9uQ2xpY2sobmF2YmFyTGlua0NsaWNrczogYW55KTogdm9pZDtcbiAgICBhZGRUb2dnbGVySWNvbkNsYXNzZXMoKTogdm9pZDtcbiAgICBwcml2YXRlIF9saXN0ZW5Ub1Njcm9sbDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHRvZ2dsZSgpOiB2b2lkO1xuICAgIHNob3coKTogdm9pZDtcbiAgICBoaWRlKCk6IHZvaWQ7XG4gICAgZ2V0IGRpc3BsYXlTdHlsZSgpOiBcIlwiIHwgXCJmbGV4XCI7XG4gICAgb25SZXNpemUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==