<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>Примените к методам Hubs и Hub, чтобы разрешить клиентские подключения к методам Hubs и Hub.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>Указывает, применять ли проверку подлинности только для вызовов любых методов Hub на стороне сервера.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Определяет, разрешено ли клиенту подключение к <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Значение true, если вызывающему объекту разрешено подключаться к концентратору; в противном случае — значение false.</returns>
      <param name="hubDescriptor">Описание концентратора, к которому клиент пытается подключиться.</param>
      <param name="request">Запрос (повторного) подключения от клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>Определяет, разрешено ли клиенту вызывать метод <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Значение true, если вызывающему объекту разрешено вызывать метод <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />. В противном случае — значение false.</returns>
      <param name="hubIncomingInvokerContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, предоставляющий сведения о вызове метода <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Значение true, чтобы показать, что экземпляр интерфейса является атрибутом, примененным непосредственно к методу; в противном случае — значение  false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>Задайте значение false, чтобы разрешить только вызов любых методов Hub на стороне сервера.Это свойство влияет только на атрибуты, применяемые к классу Hub.Это свойство недоступно для чтения.</summary>
      <returns>Значение false, применять проверку подлинности только к вызову методов Hub на стороне сервера.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>Получает или задает роли пользователя.</summary>
      <returns>Роли пользователя.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>В случае переопределения предоставляет точку входа для пользовательской проверки авторизации.Вызывается <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> и <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />.</summary>
      <returns>Значение true, если пользователь авторизован. В противном случае — значение false.</returns>
      <param name="user">
        <see cref="T:System.Security.Principal.IPrincipal" /> клиента, получающего разрешение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>Получает или задает авторизованных пользователей.</summary>
      <returns>Полномочные пользователи.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>Представляет конфигурацию подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>Получает или задает логическое значение, определяющее, включен ли формат JSONP.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>Получает или задает сопоставителя зависимостей, используемый для подключения концентратора.</summary>
      <returns>Сопоставитель зависимостей, используемый для подключения концентратора.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>Предоставляет методы расширения, используемые для отправки сообщения на все подключения, которые подписывают на определенный сигнал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>Осуществляет широковещательную передачу значений во все подключения, исключая подключения, для которых указаны идентификаторы.</summary>
      <returns>Задача, представляющая завершение вещания.</returns>
      <param name="connection">Подключение.</param>
      <param name="value">Вещаемое значение.</param>
      <param name="excludeConnectionIds">Список исключаемых из вещания идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>Отправляет сообщение во все подключения, которые подписаны на указанный сигнал.Примером сигнала может служить определенный идентификатор подключения.</summary>
      <returns>Задача, представляющая завершение вещания.</returns>
      <param name="connection">Подключение.</param>
      <param name="connectionIds">Идентификаторы подключений назначения для отправки.</param>
      <param name="value">Публикуемое значение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>Отправляет сообщение во все подключения, которые подписаны на указанный сигнал.Примером сигнала может служить определенный идентификатор подключения.</summary>
      <returns>Задача, представляющая завершение вещания.</returns>
      <param name="connection">Подключение.</param>
      <param name="connectionId">Идентификатор подключения назначения для отправки.</param>
      <param name="value">Публикуемое значение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>Сообщение, отправленное одному или нескольким подключениям.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Сигнал.</param>
      <param name="value">Полезные данные сообщения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" />.</summary>
      <param name="signal">Сигнал.</param>
      <param name="value">Полезные данные сообщения.</param>
      <param name="excludedSignals">Исключаемые сигналы.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>Представляет список сигналов, который следует использовать для фильтрации подключений, принимающих это сообщение.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IList`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>Сигнал, для которого следует отправить сообщение.Подключения, подписанные на данный сигнал, получат полезные данные сообщения.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>Список сигналов назначения для доставки этого сообщения. Если он используется, сигнал использовать нельзя.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>Полезные данные сообщения.</summary>
      <returns>Возвращает значение <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>Представляет cookie-файл SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Имя свойства cookie.</param>
      <param name="value">Значение свойства cookie.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Cookie" />.</summary>
      <param name="name">Имя свойства cookie.</param>
      <param name="value">Значение свойства cookie.</param>
      <param name="domain">Свойство домена cookie.</param>
      <param name="path">Путь свойства cookie.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>Получает или задает домен cookie.</summary>
      <returns>Домен cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>Получает или задает имя cookie.</summary>
      <returns>Имя cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>Получает или задает путь cookie.</summary>
      <returns>Путь cookie.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>Получает или задает значение cookie.</summary>
      <returns>Значение cookie.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>Представляет сопоставитель зависимостей с поведением по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>Освобождает ресурсы, использованные текущим экземпляром класса <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые текущим экземпляром класс <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>Разрешает однократно зарегистрированные службы, поддерживающие создание произвольных объектов.</summary>
      <returns>Запрошенная служба или объект.</returns>
      <param name="serviceType">Тип запрошенной службы или объекта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>Разрешает многократно зарегистрированные службы.</summary>
      <returns>Запрошенные службы.</returns>
      <param name="serviceType">Тип запрашиваемых служб.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Регистрирует указанные службы в сопоставителе зависимостей.</summary>
      <param name="serviceType">Тип регистрируемых служб.</param>
      <param name="activators">Службы, регистрируемые в сопоставителе зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Регистрирует указанную службу в сопоставителе зависимостей.</summary>
      <param name="serviceType">Тип регистрируемой службы.</param>
      <param name="activator">Служба, регистрируемая в сопоставителе зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Сопоставляет тип расширений.</summary>
      <returns>Возвращает объект для сопоставления типа расширений.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <typeparam name="T">Тип для сопоставления.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Сопоставляет тип расширений.</summary>
      <returns>Возвращает объект для сопоставления типа расширений.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <param name="type">Тип для сопоставления.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Сопоставляет все типы расширений.</summary>
      <returns>Возвращает коллекцию сопоставляемых типов расширений.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <typeparam name="T">Тип для сопоставления.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>Сопоставляет все типы расширений.</summary>
      <returns>Возвращает коллекцию сопоставляемых типов расширений.</returns>
      <param name="resolver">Сопоставитель зависимостей.</param>
      <param name="type">Тип для сопоставления.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>Предоставляет доступ к информации об узле по умолчанию.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> по умолчанию.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" /> по умолчанию.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> по умолчанию.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> по умолчанию.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>Получает или задает <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> по умолчанию.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> по умолчанию.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> по умолчанию.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> по умолчанию.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>Возвращает <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" /> по умолчанию.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>Управляет группами для подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.GroupManager" />.</summary>
      <param name="connection">
        <see cref="T:Microsoft.AspNet.SignalR.IConnection" />, в котором находится данная группа.</param>
      <param name="groupPrefix">Префикс для этой группы.Имя <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> или имя типа <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>Добавляет подключение в указанную группу.</summary>
      <returns>Задача, которая представляет идентификатор подключения, добавляемый в группу.</returns>
      <param name="connectionId">Идентификатор подключения для добавления в группу.</param>
      <param name="groupName">Имя группы</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>Удаляет подключение из указанной группы.</summary>
      <returns>Задача, которая представляет идентификатор подключения, удаляемый из группы.</returns>
      <param name="connectionId">Идентификатор подключения для удаления из группы.</param>
      <param name="groupName">Имя группы</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Отправляет значение в указанную группу.</summary>
      <returns>Задача, представляющая завершение отправки.</returns>
      <param name="groupNames">Имена групп.</param>
      <param name="value">Отправляемое значение.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Отправляет значение в указанную группу.</summary>
      <returns>Задача, представляющая завершение отправки.</returns>
      <param name="groupName">Имя группы.</param>
      <param name="value">Отправляемое значение.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>Предоставляет методы, которые осуществляют связь с подключениями SignalR, соединенными с <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>Получает или задает клиентов, который осуществляют коммуникацию с подключениями SignalR.</summary>
      <returns>Клиенты, которые обеспечивают коммуникацию с подключениями SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>Получает или задает данные о вызывающем клиенте.</summary>
      <returns>Данные о вызывающем клиенте.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>Освобождает все ресурсы, используемые данным экземпляром.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые данным экземпляром.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>Получает или задает диспетчера групп для данного экземпляра концентратора.</summary>
      <returns>Диспетчер групп для данного экземпляра концентратора.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>Происходит при соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Результат операции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>Происходит при отсоединении подключения от данного экземпляра концентратора.</summary>
      <returns>Результат операции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>Происходит при повторном соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Результат операции.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>Представляет конфигурацию концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>Определяет, были ли переданы вызывающему клиенту подробные сведения об исключениях, порожденных в методах Hub.Значение по умолчанию — false.</summary>
      <returns>Значение true, если подробные сведения об исключениях, порожденных в методах Hub, были переданы вызывающему клиенту; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>Определяет, должны ли прокси-серверы JavaScript для концентраторов на стороне сервера автоматически создаваться в «{путь}/hubs».Значение по умолчанию true.</summary>
      <returns>Значение true, если прокси-серверы JavaScript для концентраторов на стороне сервера автоматически создаются в «{путь}/hubs»; в противном случае — значение false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>Предоставляет методы расширения для добавления настраиваемых функций типам данных.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>При использовании проверки подлинности <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> добавляется в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> с элементами авторизации <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> и <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" />, которые будут применены глобально ко всем концентраторам и методам концентраторов.Для данных элементов авторизации требуется, чтобы <see cref="T:System.Security.Principal.IIdentity" /> для <see cref="T:System.Security.Principal.IPrincipal" /> имел значение «IsAuthenticated» для всех клиентов, вызывающих методы концентратора на стороне сервера или получающих вызовы клиентских методов концентратора.</summary>
      <param name="pipeline">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, в который будет добавлен <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>Канал связи для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> и его подключений.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>Основной сигнал для этого подключения.Это основной сигнал для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Отправляет сообщение подключениям, которые подписаны на сигнал.</summary>
      <returns>Задача, возвращаемая после отправки сообщения.</returns>
      <param name="message">Отправляемое сообщение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>Управляет группами для подключения и позволяет отправлять сообщения в группу.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>Отправляет значение в указанные группы.</summary>
      <returns>Задача, представляющая завершение отправки.</returns>
      <param name="groupNames">Имена групп.</param>
      <param name="value">Отправляемое значение.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>Отправляет значение в указанную группу.</summary>
      <returns>Задача, представляющая завершение отправки.</returns>
      <param name="groupName">Имя группы.</param>
      <param name="value">Отправляемое значение.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>Предоставляет интерфейс, который представляет сопоставитель зависимостей SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>Возвращает службу заданного типа.</summary>
      <returns>Возвращенная служба.</returns>
      <param name="serviceType">Тип возвращаемой службы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>Возвращает службы заданного типа.</summary>
      <returns>Возвращенные службы.</returns>
      <param name="serviceType">Тип возвращаемой службы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>Регистрирует список служб указанного типа.</summary>
      <param name="serviceType">Тип регистрируемой службы.</param>
      <param name="activators">Список делегатов функции, которые принимают параметр, представляющий активируемую службу.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>Регистрирует службу указанного типа.</summary>
      <param name="serviceType">Тип регистрируемой службы.</param>
      <param name="activator">Делегат функции, который принимает параметр, представляющий активируемую службу.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>Управляет группами для подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>Добавляет подключение в указанную группу.</summary>
      <returns>Задача, которая представляет идентификатор подключения, добавляемый в группу.</returns>
      <param name="connectionId">Идентификатор подключения для добавления в группу.</param>
      <param name="groupName">Имя группы</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>Удаляет подключение из указанной группы.</summary>
      <returns>Задача, которая представляет идентификатор подключения, удаляемый из группы.</returns>
      <param name="connectionId">Идентификатор подключения для удаления из группы.</param>
      <param name="groupName">Имя группы</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>Предоставляет доступ к информации о <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>Инкапсулирует всю информацию о подключении SignalR для <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> для концентратора.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>Предоставляет доступ к информации о <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>Представляет запрос SignalR.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>Получает файлы cookie для клиентского подключения.</summary>
      <returns>Файлы cookie для клиентского подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Получает среду OWIN.</summary>
      <returns>Среда OWIN.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>Получает или задает заголовки для запросов.</summary>
      <returns>Заголовки для запросов.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>Получает часть локального пути url.</summary>
      <returns>Часть локального пути url.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>Получает коллекцию переменных строки запроса IRequest.</summary>
      <returns>Коллекция переменных строки запроса IRequest.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>Считывает форму запроса http.</summary>
      <returns>Считываемая форма запроса http.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>Получает Uri для IRequest.</summary>
      <returns>Uri для IRequest.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>Получает участника-пользователя IRequest.</summary>
      <returns>Участник-пользователь IRequest.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> Представляет подключение между клиентом и сервером. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>Получает или задает обработчик ACK для этого подключения.</summary>
      <returns>Обработчик ACK для этого подключения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Определяет, авторизовано ли подключение.</summary>
      <returns>Значение true, если подключение авторизовано. В противном случае — значение false.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Определяет, авторизован ли запрос подключения.</summary>
      <returns>Значение true, если запрос подключения авторизован; в противном случае — значение false.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>Получает или задает подключение.</summary>
      <returns>Подключение.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>Получает или задает диспетчер счетчиков производительности.</summary>
      <returns>Диспетчер счетчика производительности.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>Возвращает сигналы, использованные в <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>Сигналы, использованные для данного <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="userId">Идентификатор пользователя для текущего подключения.</param>
      <param name="connectionId">Идентификатор входящего подключения.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>Получает или задает группы подключений.</summary>
      <returns>Группы подключений.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>Получает или задает сериализатор JSON.</summary>
      <returns>Сериализатор JSON.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>Получает или задает канал сообщений для подключения.</summary>
      <returns>Канал сообщений для подключения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при установлении нового подключения.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, выполняемый по завершении операции подключения.</returns>
      <param name="request">Запрос текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при отключении подключения.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, выполняемый по завершении операции отключения.</returns>
      <param name="request">Запрос текущего подключения.</param>
      <param name="connectionId">Идентификатор отключенного клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Вызывается при получении данных от подключения.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, выполняемый по завершении операции получения.</returns>
      <param name="request">Запрос текущего подключения.</param>
      <param name="connectionId">Идентификатор подключения, передающего данные.</param>
      <param name="data">Полезные данные, отправленные подключению.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при повторном установлении подключения после истечения времени ожидания.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, выполняемый по завершении операции повторного подключения.</returns>
      <param name="request">Запрос текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Вызывается при повторном подключении после истечения времени ожидания для определения групп, которые следует повторно присоединить.</summary>
      <returns>Набор имен групп, которые необходимо повторно присоединить после повторного подключения.</returns>
      <param name="request">Запрос текущего подключения.</param>
      <param name="groups">Группы, к которым относится вызывающее подключение, согласно его утверждению.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Обрабатывает все запросы <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, выполняемый по завершении конвейера <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="context">
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> для текущего запроса.</param>
      <exception cref="InvalidOperationException">Порождается, если подключение не было инициализировано.Порождается, если не был указан транспорт.Порождается, если не был указан идентификатор подключения.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Точка входа OWIN.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>Получает или задает защищенные данные этого подключения.</summary>
      <returns>Защищенные данные этого подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>Получает источник подключения.</summary>
      <returns>Источник подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>Получает или задает диспетчер трассировки.</summary>
      <returns>Диспетчер трассировки.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>Получает или задает транспорт, связанный с этим подключением.</summary>
      <returns>Транспорт, связанный с этим подключением.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>Предоставляет доступ к диспетчеру настройки сервера по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>Получает или задает интервал времени, представляющий период времени, в течение которого подключение остается открытым до истечения времени ожидания.</summary>
      <returns>Интервал времени, представляющий период времени, в течение которого подключение остается открытым до истечения времени ожидания.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>Получает или задает количество сообщений, помещаемых в буфер для указанного сигнала.</summary>
      <returns>Количество сообщений, помещаемых в буфер для указанного сигнала.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>Получает или задает интервал времени, представляющий период времени ожидания после отключения подключения перед созданием события отключения.</summary>
      <returns>Интервал времени, представляющий период времени ожидания после отключения подключения перед созданием события отключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>Получает или задает интервал времени, который представляет период времени между отправками сообщений проверки активности.Если параметр включен, его значение должно быть не меньше двух секунд.Чтобы отключить его, присвойте значение NULL.</summary>
      <returns>Интервал времени, который представляет период времени между отправками сообщений проверки активности.Если параметр включен, его значение должно быть не меньше двух секунд.Чтобы отключить его, присвойте значение NULL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>Предоставляет доступ к конфигурации сервера.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>Получает или задает <see cref="T:System.TimeSpan" />, представляющий период времени, в течение которого подключение остается открытым до истечения времени ожидания.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />, представляющий период времени, в течение которого подключение остается открытым до истечения времени ожидания.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>Получает или задает количество сообщений, помещаемых в буфер для указанного сигнала.</summary>
      <returns>Количество сообщений, помещаемых в буфер для указанного сигнала.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>Получает или задает <see cref="T:System.TimeSpan" />, представляющий период времени ожидания после отключения подключения перед созданием события отключения.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />, представляющий период времени ожидания после отключения подключения перед созданием события отключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>Получает или задает <see cref="T:System.TimeSpan" />, который представляет интервал времени между отправками сообщений проверки активности.Если параметр включен, его значение должно быть не меньше двух секунд.Чтобы отключить его, присвойте значение NULL.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />, который представляет период времени между отправками сообщений проверки активности.Если параметр включен, его значение должно быть не меньше двух секунд.Чтобы отключить его, присвойте значение NULL.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>Получает или задает <see cref="T:System.TimeSpan" />, указывающий клиенту ожидать перед повторным установлением подключения долгого опроса после отправки данных с сервера.Значение по умолчанию — 0.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>Получает или задает <see cref="T:System.TimeSpan" />, представляющий период времени, предоставляемый клиенту для подключения перед возвращением к использованию другого транспорта или регистрации сбоя.Значение по умолчанию — 5 секунд.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>Представляет контекст узла SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <param name="environment">Среда узла SignalR.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>Получает среду узла SignalR.</summary>
      <returns>Среда узла SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>Представляет узел для расширений сопоставителя зависимостей.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>Инициализирует узел для расширений сопоставителя зависимостей.</summary>
      <param name="resolver">IDependencyResolver.</param>
      <param name="instanceName">Имя экземпляра.</param>
      <param name="hostShutdownToken">Маркер завершения работы узла.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>Представляет подключение к клиенту.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>Получает маркер отмены, который представляет время существования клиента.</summary>
      <returns>Маркер отмены, который представляет время существования клиента.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>Получает или задает тип содержимого ответа.</summary>
      <returns>Тип контента ответа.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>Очищает буфер от ответа клиенту.</summary>
      <returns>Задача, представляющая завершение очистки данных.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Записывает буферизованные данные.</summary>
      <param name="data">Данные, записываемые в буфер.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>Отвечает за создание экземпляров <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Создает новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" />.</summary>
      <param name="resolver">Сопоставитель зависимостей, используемый при создании <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>Создает экземпляр указанного типа при помощи сопоставителя зависимостей или конструктора типа по умолчанию.</summary>
      <returns>Экземпляр <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="connectionType">Тип создаваемого <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>Методы расширения для <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>Закрывает подключение к клиенту с дополнительными данными.</summary>
      <returns>Задача, представляющая завершение закрытия подключения.</returns>
      <param name="response">
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />.</param>
      <param name="data">Данные, записываемые в подключение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>Применяет атрибуты авторизации из класса <see cref="T:Microsoft.AspNet.SignalR.Hub" />, чтобы определить, следует ли разрешить клиентам получать сообщения от концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />.</summary>
      <param name="globalConnectionAuthorizer">Авторизация глобального подключения.</param>
      <param name="globalInvocationAuthorizer">Авторизация глобального вызова.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Заключает в оболочку функцию, вызываемую перед подпиской клиента на сигналы, которые принадлежат концентратору, описанному с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.По умолчанию <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> будет осуществлять поиск атрибутов в концентраторе, что поможет определить, разрешено ли клиенту подписываться на вызовы методов для описанного концентратора.Функция возвращает значение true, если клиенту разрешено подписываться на вызовы клиентских методов концентратора. В противном случае функция возвращает значение false.</summary>
      <returns>Заключенная в оболочку функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</returns>
      <param name="authorizeConnect">Функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Заключает в оболочку функцию, вызывающую метод концентратора на стороне сервера.Даже если клиенту не разрешено подключаться к концентратору, ему все равно будет разрешено вызывать методы на стороне сервера для этого концентратора, если это не предотвращено в <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> из-за невыполнения параметра вызова.</summary>
      <returns>Заключенная в оболочку функция, вызывающая метод концентратора на стороне сервера.</returns>
      <param name="invoke">Функция, вызывающая метод концентратора на стороне сервера.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>Описывает вызов клиентского метода концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>Получает или задает список аргументов концентратора клиента, с которым будет вызван метод.</summary>
      <returns>Список аргументов, связанный с методом концентратора клиента.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>Получает или задает имя концентратора, которому принадлежит вызываемый метод.</summary>
      <returns>Имя концентратора, которому принадлежит вызываемый метод.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>Получает или задает имя вызываемого клиентского метода концентратора.</summary>
      <returns>Имя вызываемого клиентского метода концентратора.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>Получает или задает хранилище пар «ключ-значение», представляющих состояние концентратора на стороне сервера, которое изменилось с момента последней отправки состояния концентратора клиенту.</summary>
      <returns>Хранилище пар «ключ-значение», представляющее состояние концентратора на сервере.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>Представляет прокси-сервер на стороне сервера для клиентского концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>Вызывает метод для подключений, представленных экземпляром <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" />.</summary>
      <returns>Задача, представляющая завершение отправки данных в клиент.</returns>
      <param name="method">Имя вызываемого метода.</param>
      <param name="args">Аргументы, передаваемые в клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Выполняет метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" />.</summary>
      <returns>Всегда имеет значение true.</returns>
      <param name="binder">Информация, которая содержит семантику привязки и сведения об операции клиентского концентратора.</param>
      <param name="args">Аргументы, передаваемые в член объекта во время операции вызова.</param>
      <param name="result">При возврате из метода содержит результат вызова члена.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>Представляет прокси-сервер идентификатора подключения для клиентского концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>Представляет локатор сборки по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>Получает сборки, которые были загружены в домен текущего приложения.</summary>
      <returns>Массив сборок в домене текущего приложения.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>Представляет активатор по умолчанию для концентраторов SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" />.</summary>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Создает новый активатор концентратора.</summary>
      <returns>Созданный активатор концентратора.</returns>
      <param name="descriptor">Дескриптор.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>Представляет диспетчера концентратора по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" />.</summary>
      <param name="resolver">Сопоставитель концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>Получает один дескриптор концентратора.</summary>
      <returns>Дескриптор концентратора, если имеется; в противном случае — значение null.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Принимает метод с указанным именем для заданного концентратора.</summary>
      <returns>Дескриптор метода, если он найден.В противном случае значение null.</returns>
      <param name="hubName">Имя концентратора.</param>
      <param name="method">Имя искомого метода.</param>
      <param name="parameters">Сопоставляемые параметры метода.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Получает все методы, вызов которых доступен для заданного концентратора.</summary>
      <returns>Список доступных методов.</returns>
      <param name="hubName">Имя концентратора.</param>
      <param name="predicate">Дополнительный предикат для фильтрации результатов.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Принимает все доступные концентраторы, которые соответствуют заданному предикату.</summary>
      <returns>Список дескрипторов концентраторов.</returns>
      <param name="predicate">Предикат.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>Преобразовывает заданное имя концентратора в конкретный объект.</summary>
      <returns>Экземпляр реализации концентратора, если он найден.В противном случае значение null.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>Преобразовывает все доступные концентраторы в их конкретные объекты.</summary>
      <returns>Список экземпляров концентраторов.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>Представляет генератор для прокси-сервера JavaScript по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="manager">Диспетчер концентратора.</param>
      <param name="javaScriptMinifier">Уменьшитель JavaScript.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" />.</summary>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Создает указанный прокси-сервер.</summary>
      <returns>Созданный прокси-сервер.</returns>
      <param name="serviceUrl">URL-адрес службы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>Создает указанный прокси-сервер.</summary>
      <returns>Созданный прокси-сервер.</returns>
      <param name="serviceUrl">URL-адрес службы.</param>
      <param name="includeDocComments">Значение true, чтобы добавить комментарии к документу. В противном случае — значение false.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>Представляет сопоставитель по умолчанию для параметров концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Разрешает значения параметров метода на основании введенных объектов.</summary>
      <returns>Массив значений параметров.</returns>
      <param name="method">Дескриптор метода.</param>
      <param name="values">Список значений, на основании которого выполняется разрешение значений параметров.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>Разрешает значение параметра на основании предоставленного объекта.</summary>
      <returns>Значение параметра.</returns>
      <param name="descriptor">Дескриптор параметра.</param>
      <param name="value">Значение, на основании которого разрешается значение параметра.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>Описывает информацию концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>Получает или задает имя концентратора.</summary>
      <returns>Имя концентратора.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>Получает или задает значение, указывающее, указано ли имя атрибута концентратора.</summary>
      <returns>Значение true, если имя атрибута концентратора указано. В противном случае — значение false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>Содержит объект словаря для хранения пар «ключ-значение» и переопределяет методы TrySetMember и TryGetMember для поддержки нового синтаксиса.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" />.</summary>
      <param name="obj">Объект словаря.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет определенный объект пары «ключ-значение» в словарь.</summary>
      <param name="item">Добавляемый объект пары «ключ/значение».</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>Добавляет в словарь указанный ключ и значение.</summary>
      <param name="key">Ключ добавляемого элемента.</param>
      <param name="value">Добавляемое значение элемента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>Удаляет все ключи и значения из словаря.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Определяет, содержит ли словарь определенный элемент пары «ключ/значение».</summary>
      <returns>Значение true, если словарь содержит элемент с указанным значением; в противном случае — значение false.</returns>
      <param name="item">Элемент пары «ключ/значение» для поиска в словаре.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>Определяет, содержит ли словарь указанный ключ.</summary>
      <returns>Значение true, если словарь содержит указанный ключ; в противном случае — значение false.</returns>
      <param name="key">Ключ, который требуется найти в словаре.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует элементы пары «ключ/значение» в существующий одномерный массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив, в который копируются элементы из словаря.</param>
      <param name="arrayIndex">Значение нулевого индекса в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>Получает количество элементов в словаре.</summary>
      <returns>Количество элементов в словаре.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по словарю.</summary>
      <returns>Перечислитель, который используется для итерации по словарю.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>Получает значение, доступен ли динамический словарь только для чтения.</summary>
      <returns>Значение true, если динамический словарь доступен только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>Получает или задает элемент с определенным ключом в словаре.</summary>
      <returns>Элемент с определенным ключом в словаре.</returns>
      <param name="key">Ключ элемента.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>Получает коллекцию ключей, содержащихся в словаре.</summary>
      <returns>Коллекция ключей, содержащихся в словаре.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет определенный элемент пары «ключ-значение» из словаря.</summary>
      <returns>Словарь с удаленным элементом.</returns>
      <param name="item">Удаляемый элемент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>Удаляет указанный ключ из словаря.</summary>
      <returns>Словарь с удаленным ключом.</returns>
      <param name="key">Удаляемый ключ.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции.</summary>
      <returns>Перечислитель, который используется для итерации по коллекции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Обеспечивает реализацию операций, которые получают значения членов.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Предоставляет информацию об объекте, который вызывает динамическую операцию.</param>
      <param name="result">Результат операции get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Извлекает значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если словарь содержит элемент с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден. В противном случае возвращается значение по умолчанию для типа параметра значения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Обеспечивает реализацию операций, которые задают значения членов.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Предоставляет информацию об объекте, который вызывает динамическую операцию.</param>
      <param name="value">Значение, которое требуется задать для члена.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>Распаковывает указанное значение, связанное со словарем.</summary>
      <returns>Распакованное значение.</returns>
      <param name="value">Распаковываемое значение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>Получает коллекцию значений, содержащихся в словаре.</summary>
      <returns>Коллекция значений, содержащихся в словаре.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>Запаковывает указанное значение, связанное со словарем.</summary>
      <returns>Запакованное значение.</returns>
      <param name="value">Значение, помещаемое в оболочку.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>Представляет генератор для пустого прокси-сервера JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Создает прокси-сервер с заданным URL-адресом.</summary>
      <returns>Созданный прокси-сервер.</returns>
      <param name="serviceUrl">URL-адрес службы.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>Представляет перечисление, связанное с локатором сборки.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" />.</summary>
      <param name="assemblies">Сборки.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>Возвращает список сборок.</summary>
      <returns>Список сборок.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>Исключение, отправляемое в вызывающий клиент.Оно будет переопределено универсальным исключением, если только ошибкой не является <see cref="T:Microsoft.AspNet.SignalR.HubException" /> или <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" /> не присвоено значение true.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>Значение, возвращаемое в расположение, где порождена ошибка.Если задан результат, ошибке будет присвоено значение NULL.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>Представляет группу сигнальных прокси-серверов, используемых концентратором.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>Представляет вызывающий контекст клиента.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />.</summary>
      <param name="request">Текущий HTTP-запрос.</param>
      <param name="connectionId">Идентификатор подключения.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>Получает идентификатор подключения вызывающего клиента.</summary>
      <returns>Идентификатор подключения вызывающего клиента.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>Получает заголовки для запроса.</summary>
      <returns>Заголовки для запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>Получает строку запроса для запроса.</summary>
      <returns>Строка запроса для запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> для текущего HTTP-запроса.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IRequest" /> для текущего HTTP-запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>Получает файлы cookie для запроса.</summary>
      <returns>Файлы cookie для запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>Получает <see cref="T:System.Security.Principal.IPrincipal" /> для запроса.</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> для запроса.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>Инкапсулирует всю информацию об отдельном подключении SignalR для <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" />.</summary>
      <param name="pipelineInvoker">Средство вызова конвейера.</param>
      <param name="connection">Подключение интерфейса.</param>
      <param name="hubName">Имя концентратора.</param>
      <param name="connectionId">Идентификатор подключения.</param>
      <param name="tracker">Отслеживание изменения состояния.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>Получает или задает вызывающего клиента.</summary>
      <returns>Вызывающий клиент.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>Получает или задает всех подключенных клиентов, кроме вызывающего клиента.</summary>
      <returns>Все подключенные клиенты, кроме вызывающего клиента.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>Возвращает динамическое представление всех клиентов в группе, кроме вызывающего клиента.</summary>
      <returns>Динамическое представление всех клиентов в группе, кроме вызывающего клиента.</returns>
      <param name="groupName">Имя группы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>Возвращает динамическое представление всех клиентов в указанных группах, за исключением вызывающего клиента.</summary>
      <returns>Динамическое представление всех клиентов в группе, кроме вызывающего клиента.</returns>
      <param name="groupNames">Имена групп</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>Возвращает динамическое представление всех клиентов, кроме указанных вызывающих клиентов.</summary>
      <returns>Динамическое представление всех клиентов, кроме указанных вызывающих клиентов.</returns>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>Возвращает динамическое представление подключения с указанными идентификатором подключения.</summary>
      <returns>Динамическое представление указанного клиента.</returns>
      <param name="connectionId">Идентификатор подключения</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>Возвращает динамическое представление подключений с указанными идентификаторами подключений.</summary>
      <returns>Динамическое представление указанных клиентов.</returns>
      <param name="connectionIds">Идентификаторы подключений.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>Возвращает динамическое представление указанной группы.</summary>
      <returns>Динамическое представление указанной группы.</returns>
      <param name="groupName">Имя группы</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>Возвращает динамическое представление указанных групп.</summary>
      <returns>Динамическое представление указанных групп.</returns>
      <param name="groupNames">Имена групп.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>Представляет информацию об одном концентраторе.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>Создает полное имя концентратора, используя используя указанное неполное имя.</summary>
      <returns>Созданное полное имя.</returns>
      <param name="unqualifiedName">Неполное имя.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>Получает или задает тип концентратора.</summary>
      <returns>Тип концентратора.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>Обрабатывает всю связь, осуществляемую через постоянное подключение концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />.</summary>
      <param name="configuration">Настройки конфигурации, определяющие, следует ли включить прокси-серверы JS и предоставить клиентам подробные сведения об ошибках концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Создает список концентраторов, авторизованных для заданного запроса подключения.</summary>
      <returns>Значение true, если имеются авторизованные концентраторы. В противном случае — значение false.</returns>
      <param name="request">Запрос текущего подключения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Вызывается узлом для инициализации распределения концентратора для IDependencyResolver.</summary>
      <param name="resolver">Сопоставитель IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Задача, которая вызывается при соединении подключения с данным экземпляром концентратора.</returns>
      <param name="request">IRequest для текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при отсоединении подключения от данного экземпляра концентратора.</summary>
      <returns>Задача, которая вызывается при разъединении подключения с данным экземпляром концентратора.</returns>
      <param name="request">IRequest для текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>Обрабатывает входящие вызовы метода концентратора.</summary>
      <returns>Задача,которая вызывается при получении данных от этого экземпляра концентратора.</returns>
      <param name="request">IRequest для текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
      <param name="data">Полученные данные.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>Вызывается при повторном соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Задача, которая вызывается при повторном соединении подключения с данным экземпляром концентратора.</returns>
      <param name="request">IRequest для текущего подключения.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>Вызывается при повторном подключении после истечения времени ожидания для определения групп, которые следует повторно присоединить.</summary>
      <returns>Список подключений, используемых при повторном подключении после истечения времени ожидания для определения групп, которые следует повторно присоединить.</returns>
      <param name="request">IRequest для текущего подключения.</param>
      <param name="groups">Группы, к которым относится вызывающее подключение, согласно его утверждению.</param>
      <param name="connectionId">Идентификатор повторно подключающегося клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Обрабатывает все запросы для HostContext.</summary>
      <returns>Задача, которая обрабатывает все запросы для HostContext.</returns>
      <param name="context">Контекст узла.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>Получает подключения концентратора, которые активируют приложения для трассировки выполнения кода и связывают сообщения трассировки с их источником.</summary>
      <returns>Подключения концентратора, которые активируют приложения для трассировки выполнения кода и связывают сообщения трассировки с их источником.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>Предоставляет расширение диспетчера концентратора для обработки всего концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>Обеспечивает всю информацию о дескрипторе концентратора.</summary>
      <returns>Дескриптор концентратора, обеспечивающий всю информацию.</returns>
      <param name="hubManager">Диспетчер концентратора.</param>
      <param name="hubName">Имя концентратора.</param>
      <param name="counters">Счетчики производительности.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>Получает все методы, вызов которых доступен для заданного концентратора.</summary>
      <returns>Методы коллекции, вызов которых доступен на заданном концентраторе.</returns>
      <param name="hubManager">Диспетчер концентратора.</param>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>Принимает все доступные концентраторы.</summary>
      <returns>Извлечение всех доступных концентраторов.</returns>
      <param name="hubManager">Диспетчер концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>Представляет атрибуты имени метода для концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" />.</summary>
      <param name="methodName">Имя метода.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>Получает или задает имя метода.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>Представляет атрибут для имени концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" />.</summary>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>Возвращает или задает имя концентратора.</summary>
      <returns>Имя концентратора.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>Общий базовый класс для упрощения реализации IHubPipelineModules.Модуль может перехватить и настроить различные этапы обработки концентратора, в том числе подключение, повторное подключение, вызов методов концентратора на стороне сервера, вызов клиентских методов концентратора, авторизацию клиентов концентратора и повторное присоединение групп концентратора.Для активации модуля используется вызов <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Для вызова объединенных модулей, добавленных в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, используется интерфейс <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Заключает в оболочку функцию, вызываемую перед подпиской клиента на сигналы, которые принадлежат концентратору, описанному с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.По умолчанию <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> будет осуществлять поиск атрибутов в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, что поможет определить, разрешено ли клиенту подписываться на вызовы методов для описанного концентратора.Функция возвращает значение true, если клиенту разрешено подписываться на вызовы клиентских методов концентратора. В противном случае функция возвращает значение false.</summary>
      <returns>Заключенная в оболочку функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</returns>
      <param name="authorizeConnect">Функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnConnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при подключении клиента к концентратору.</returns>
      <param name="connect">Функция, вызываемая при подключении клиента к концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при отключении клиента от <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому был подключен клиент.По умолчанию это приводит к вызову метода OnDisconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при отключении клиента от концентратора.</returns>
      <param name="disconnect">Функция, вызываемая при отключении клиента от концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Заключает в оболочку функцию, вызывающую метод концентратора на стороне сервера.Даже если клиенту не разрешено подключаться к концентратору, ему все равно будет разрешено вызывать методы на стороне сервера для этого концентратора, если это не предотвращено в <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> из-за невыполнения параметра вызова.</summary>
      <returns>Заключенная в оболочку функция, вызывающая метод концентратора на стороне сервера.</returns>
      <param name="invoke">Функция, вызывающая метод концентратора на стороне сервера.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызывающую клиентский метод концентратора.</summary>
      <returns>Заключенная в оболочку функция, вызывающая клиентский метод концентратора.</returns>
      <param name="send">Функция, вызывающая клиентский метод концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при повторном подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnReconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при повторном подключении клиента к концентратору.</returns>
      <param name="reconnect">Функция, вызываемая при повторном подключении клиента к концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Заключает в оболочку функцию, которая определяет, к какой из групп, принадлежащих концентратору, который описан с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />, следует разрешить повторное присоединение клиента.По умолчанию клиенты, которые повторно подключаются к серверу, будут удалены из всех групп, в которые они входили ранее, так как клиенты без доверия могут утверждать об участии в группах, к которым им никогда не было разрешено присоединяться.</summary>
      <returns>Заключенная в оболочку функция, которая определяет, к каким группам следует разрешить повторное присоединение клиента.</returns>
      <param name="rejoiningGroups">Функция, которая определяет, к каким группам следует разрешить повторное присоединение клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается после выполнения компонентов подключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, и после выполнения <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> (если они выполняются).</summary>
      <param name="hub">Концентратор, к которому подключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается после выполнения компонентов отключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, и после выполнения <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> (если они выполняются).</summary>
      <param name="hub">Концентратор, от которого отключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Этот метод вызывается после завершения выполнения входящих компонентов каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, и выполнения метода концентратора на стороне сервера.</summary>
      <returns>Возможное новое или обновленное возвращаемое значение метода концентратора на стороне сервера.</returns>
      <param name="result">Возвращаемое значение метода концентратора на стороне сервера.</param>
      <param name="context">Описание вызова метода концентратора на стороне сервера.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Этот метод вызывается после выполнения исходящих компонентов каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Это не означает, что все клиенты получили вызов метода концентратора, но указывает, что сообщение о вызове концентратора было успешно опубликовано в канале сообщений.</summary>
      <param name="context">Описание вызова клиентского метода концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается после выполнения компонентов повторного подключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, и после выполнения <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> (если они выполняются).</summary>
      <param name="hub">Концентратор, к которому был повторно подключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Этот метод вызывается перед выполнением компонентов AuthorizeConnect каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули не будут запущены, и клиенту не будет разрешено подписаться на клиентские вызовы методов, которые принадлежат концентратору, описанному с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.</summary>
      <returns>Значение true, если клиенту разрешено подключаться к концентратору; в противном случае — значение false.</returns>
      <param name="hubDescriptor">Описание концентратора, на который клиент пытается подписаться.</param>
      <param name="request">Запрос подключения клиента, выполняющего попытку подписаться на концентратор.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается перед выполнением компонентов подключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> выполнены не будут.</summary>
      <returns>Значение true, если должны быть выполнены компоненты подключения добавленных позже модулей и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" />. В противном случае — значение false.</returns>
      <param name="hub">Концентратор, к которому подключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается перед выполнением компонентов отключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> выполнены не будут.</summary>
      <returns>Значение true, если должны быть выполнены компоненты отключения добавленных позже модулей и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" />. В противном случае — значение false.</returns>
      <param name="hub">Концентратор, от которого отключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Этот метод вызывается перед выполнением входящих компонентов каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули и вызов метода концентратора на стороне сервера выполнены не будут.Даже если клиенту не разрешено подключаться к концентратору, ему все равно будет разрешено вызывать методы на стороне сервера для этого концентратора, если это не предотвращено в <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> из-за невыполнения параметра вызова либо предотвращено в <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" /> из-за возвращения значения false.</summary>
      <returns>Значение true, если должны быть выполнены входящие компоненты добавленных позже модулей и вызов метода концентратора на стороне сервера. В противном случае — значение false.</returns>
      <param name="context">Описание вызова метода концентратора на стороне сервера.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Этот метод вызывается перед выполнением исходящих компонентов каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули и клиентские вызовы метода концентратора выполнены не будут.</summary>
      <returns>Значение true, если должны быть выполнены исходящие компоненты добавленных позже модулей и вызов метода концентратора на стороне сервера. В противном случае — значение false.</returns>
      <param name="context">Описание вызова клиентского метода концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Этот метод вызывается перед выполнением компонентов повторного подключения каких-либо модулей, добавленных позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />.Если он возвращает значение false, то эти добавленные позже модули и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> выполнены не будут.</summary>
      <returns>Значение true, если должны быть выполнены компоненты повторного подключения добавленных позже модулей и метод <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" />. В противном случае — значение false.</returns>
      <param name="hub">Концентратор, к которому был повторно подключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Вызывается, когда метод концентратора на стороне сервера или входящий компонент модуля, добавленного позже в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, порождает необрабатываемое исключение.Изучение исключения с помощью данного метода не предотвратит появления его всплывающих окон для других модулей.</summary>
      <param name="exceptionContext">Представляет исключение, порожденное при вызове на стороне сервера.Можно изменить ошибку или задать результат с помощью этого контекста.</param>
      <param name="invokerContext">Описание вызова метода концентратора на стороне сервера.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>Предоставляет методы, которые осуществляют связь с запросом подключения SignalR, соединенным с концентратором.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>Получает или задает значение подключения концентратора.</summary>
      <returns>Значение подключения концентратора</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>Получает или задает идентификатор подключения.</summary>
      <returns>Идентификатор подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>Получает или задает метод запроса.</summary>
      <returns>Метод запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>Получает или задает значения параметра.</summary>
      <returns>Значения параметра.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>Получает или задает текущее состояние запроса.</summary>
      <returns>Текущее состояние запроса.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>Представляет ответ, полученный на входящий запрос концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>Получает и задает исключение, порождаемое вызовом метода концентратора.</summary>
      <returns>Исключение, порождаемое вызовом метода концентратора.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>Дополнительные данные ошибки, содержащиеся в <see cref="T:Microsoft.AspNet.SignalR.HubException" /></summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>Получает или задает идентификатор операции.</summary>
      <returns>Идентификатор операции.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>Указывает, является ли ошибка <see cref="T:Microsoft.AspNet.SignalR.HubException" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>Получает или задает результат вызова.</summary>
      <returns>Результат вызова.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>Получает или задает трассировку стека исключения, порождаемого вызовом метода концентратора.</summary>
      <returns>Трассировка стека исключения, порождаемого вызовом метода концентратора.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>Получает или задает изменения, внесенные в состояние обхода.</summary>
      <returns>Изменения, внесенные в состояние прохождения кругового пути.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>Определяет расположение сборки и возвращает информацию о ее модулях.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>возвращает список сборок, упоминаемых модулем.</summary>
      <returns>Список сборок, упоминаемых модулем.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>Интерфейс, реализуемый атрибутами <see cref="T:System.Attribute" />, который может разрешить клиенту подключиться к <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>На основе <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" /> позволяет определить, разрешено ли клиенту подключение к <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Значение true, если вызывающему объекту разрешено подключаться к концентратору. В противном случае — значение false.</returns>
      <param name="hubDescriptor">Описание концентратора, к которому клиент пытается подключиться.</param>
      <param name="request">Запрос подключения от клиента.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>Интерфейс, реализуемый с помощью атрибутов<see cref="T:System.Attribute" />, который может разрешить вызов методов <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>На основе <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" /> позволяет определить, разрешено ли клиенту вызывать метод <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Значение true, если вызывающему объекту разрешено вызывать метод <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />. В противном случае — значение false.</returns>
      <param name="hubIncomingInvokerContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />, предоставляющий сведения о вызове метода <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</param>
      <param name="appliesToMethod">Указывает, является ли экземпляр интерфейса атрибутом, применяемым к методу напрямую.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>Прокси-сервер на стороне сервера для клиентского концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>Вызывает метод для подключений, представленных экземпляром <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" />.</summary>
      <returns>Задача, представляющая завершение отправки данных в клиент.</returns>
      <param name="method">имя вызываемого метода</param>
      <param name="args">аргументы, передаваемые в клиент</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>Предоставляет интерфейс, который представляет методы, обеспечивающие коммуникацию с подключениями SignalR, которые соединены с концентратором.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>Получает или задает клиентов, подключаемых к концентратору.</summary>
      <returns>Клиенты, подключаемые к концентратору.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>Получает или задает данные о вызывающем клиенте.</summary>
      <returns>Данные о вызывающем клиенте.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>Получает или задает диспетчера групп для данного экземпляра концентратора.</summary>
      <returns>Диспетчер групп для данного экземпляра концентратора.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>Вызывается при соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Объект задачи, представляющий операцию подключения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>Вызывается при отсоединении подключения от данного экземпляра концентратора.</summary>
      <returns>Объект задачи, представляющий операцию отключения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>Вызывается при повторном соединении подключения с данным экземпляром концентратора.</summary>
      <returns>Объект задачи, представляющий операцию повторного подключения.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>Предоставляет метод для создания экземпляра концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Создает новый экземпляр концентратора.</summary>
      <returns>Новый созданный концентратор.</returns>
      <param name="descriptor">Дескриптор концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>Инкапсулирует всю информацию об отдельном подключении SignalR для <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>Инкапсулирует всю информацию о подключении SignalR для <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>Получает или задает всех подключенных клиентов.</summary>
      <returns>Все подключенные клиенты.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>Возвращает динамическое представление всех клиентов, кроме указанных вызывающих клиентов.</summary>
      <returns>Динамическое представление всех клиентов, кроме указанных вызывающих клиентов.</returns>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>Возвращает динамическое представление подключения с указанными идентификатором подключения.</summary>
      <returns>Динамическое представление указанного клиента.</returns>
      <param name="connectionId">Идентификатор подключения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>Возвращает динамическое представление указанной группы.</summary>
      <returns>Динамическое представление указанной группы.</returns>
      <param name="groupName">Имя группы.</param>
      <param name="excludeConnectionIds">Список исключаемых идентификаторов подключений.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>Описывает поставщик дескриптора концентратора, который предоставляет информацию о доступных концентраторах.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>Извлечение всех доступных концентраторов.</summary>
      <returns>Коллекция дескрипторов концентраторов.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Осуществляет попытку извлечь концентратор с заданным именем.</summary>
      <returns>Значение true, если концентратор найден</returns>
      <param name="hubName">Имя концентратора.</param>
      <param name="descriptor">Извлеченный объект дескриптора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>Описание вызова метода концентратора на стороне сервера, исходящего от клиента.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>Получает аргументы, передаваемые в вызванный метод.</summary>
      <returns>Аргументы, передаваемые в вызванный метод.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>Получает экземпляр концентратора, содержащий вызванный метод в качестве члена.</summary>
      <returns>Экземпляр концентратора, содержащий вызванный метод в качестве члена.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>Получает описание метода, вызываемого клиентом.</summary>
      <returns>Описание метода, вызываемого клиентом.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>Получает хранилище пар «ключ-значение», представляющих состояние концентратора на стороне клиента на момент вызова.</summary>
      <returns>Хранилище пар «ключ-значение», представляющих состояние концентратора на стороне клиента на момент вызова.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>Описывает диспетчер концентраторов — основной пункт во всем концентраторе, и процесс поиска метода.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>Получает один дескриптор концентратора.</summary>
      <returns>Дескриптор концентратора, если он найден.В противном случае — Null.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Принимает метод с указанным именем для заданного концентратора.</summary>
      <returns>Дескриптор метода, если он найден.В противном случае — Null.</returns>
      <param name="hubName">Имя концентратора.</param>
      <param name="method">Имя искомого метода.</param>
      <param name="parameters">Сопоставляемые параметры метода.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>Получает все методы, вызов которых доступен для заданного концентратора.</summary>
      <returns>Список доступных методов.</returns>
      <param name="hubName">Имя концентратора,</param>
      <param name="predicate">Дополнительный предикат для фильтрации результатов.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>Принимает все доступные концентраторы, которые соответствуют заданному предикату.</summary>
      <returns>Список дескрипторов концентраторов.</returns>
      <param name="predicate">Предикат.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>Преобразовывает заданное имя концентратора в конкретный объект.</summary>
      <returns>Экземпляр реализации концентратора, если он найден.В противном случае — Null.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>Преобразовывает все доступные концентраторы в их конкретные объекты.</summary>
      <returns>Список экземпляров концентраторов.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>Описание вызова метода концентратора на стороне клиента, исходящего от сервера.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>Получает <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (если используется), которое соответствует клиенту, вызвавшему метод концентратора на стороне сервера, который вызывает клиентский метод концентратора.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IConnection" /> (если используется), которое соответствует клиенту, вызвавшему метод концентратора на стороне сервера, который вызывает клиентский метод концентратора.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>Получает сигналы (идентификатор подключения, имя типа концентратора или имя типа концентратора с «.» и именем группы), принадлежащие клиентам, которым не следует получать вызов метода вне зависимости от <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />.</summary>
      <returns>Сигналы (идентификатор подключения, имя типа концентратора или имя типа концентратора с «.» и именем группы), принадлежащие клиентам, которым не следует получать вызов метода вне зависимости от <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>Получает описание вызова метода для клиента.</summary>
      <returns>Описание вызова метода для клиента.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>Получает сигнал (идентификатор подключения, имя типа концентратора или имя типа концентратора с «.» и именем группы), принадлежащие клиентам, которым не следует получать вызов метода.</summary>
      <returns>Сигнал (идентификатор подключения, имя типа концентратора или имя типа концентратора с «.» и именем группы), принадлежащие клиентам, которым не следует получать вызов метода.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>Сигналы (идентификатор подключения, имя типа концентратора или имя типа концентратора с «.» и именем группы), принадлежащие клиентам, которым не следует получать вызов метода.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>Коллекция модулей, которые могут перехватить и настроить различные этапы обработки концентратора, в том числе подключение, повторное подключение, вызов методов концентратора на стороне сервера, вызов клиентских методов концентратора, авторизацию клиентов концентратора и повторное присоединение групп концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>Добавляет <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> в конвейер концентратора.Модули, добавленные в конвейер первыми, послужат оболочкой для модулей, добавленных позже.Все модули необходимо добавить в конвейер до того, как будет вызван какой-либо из методов <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> и недавно добавленный модуль, позволяющий объединять в цепочку вызовы <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Данный метод изменяет конвейер, для которого он вызван, поэтому его результат хранить не обязательно.</returns>
      <param name="pipelineModule">Модуль, который может перехватить и настроить различные этапы обработки концентратора, в том числе подключение, повторное подключение, вызов методов концентратора на стороне сервера, вызов клиентских методов концентратора, авторизацию клиентов концентратора и повторное присоединение групп концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>Реализации этого интерфейса отвечают за выполнение операций, необходимых для выполнения различных этапов обработки концентратора, включая числе подключение, повторное подключение, вызов методов концентратора на стороне сервера, вызов клиентских методов концентратора, авторизацию клиентов концентратора и повторное присоединение групп концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>Вызывается перед подпиской клиента на сигналы, которые принадлежат концентратору, описанному с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.По умолчанию <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> будет осуществлять поиск атрибутов в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, что поможет определить, разрешено ли клиенту подписываться на вызовы методов для описанного концентратора.</summary>
      <returns>Значение true, если клиенту разрешено подписываться на вызовы методов концентратора на стороне клиента. В противном случае — значение false.</returns>
      <param name="hubDescriptor">Описание концентратора, к которому клиент пытается подключиться.</param>
      <param name="request">Запрос подключения, выполненный клиентом, который должен содержать имя <see cref="T:System.Security.Principal.IPrincipal" /> пользователя клиента.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Вызывается при подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnConnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Вызывается при отключении клиента от <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому был подключен клиент.По умолчанию это приводит к вызову метода OnDisconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, от которого был отключен клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>Вызывает метод концентратора на стороне сервера.</summary>
      <returns>Асинхронная операция, определяющая возвращаемое значение вызова метода концентратора на стороне сервера.</returns>
      <param name="context">Описание вызова метода концентратора на стороне сервера.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>Вызывается при повторном подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnReconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="hub">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому повторно подключается клиент.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>Этот метод определяет, к какой из групп, принадлежащих концентратору, который описан с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />, следует разрешить повторное присоединение клиента.По умолчанию клиенты, которые повторно подключаются к серверу, будут удалены из всех групп, в которые они входили ранее, так как клиенты без доверия могут утверждать об участии в группах, к которым им никогда не было разрешено присоединяться.</summary>
      <returns>Список групп, к которым клиенту разрешено повторно присоединиться.</returns>
      <param name="hubDescriptor">Описание концентратора, к группам которого клиент пытается повторно присоединиться.</param>
      <param name="request">Запрос повторного подключения, выполненный клиентом, который пытается повторно присоединиться к группам.</param>
      <param name="groups">Список групп, принадлежащих соответствующему концентратору, в которые, согласно собственному утверждению, клиент входил перед повторным подключением.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>Вызывает клиентский метод концентратора.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="context">Описание вызова клиентского метода концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" /> может перехватить и настроить различные этапы обработки концентратора, в том числе подключение, повторное подключение, вызов методов концентратора на стороне сервера, вызов клиентских методов концентратора, авторизацию клиентов концентратора и повторное присоединение групп концентратора.Для активации модулей используется вызов <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />.Для вызова объединенных модулей, добавленных в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />, используется интерфейс <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>Заключает в оболочку функцию, вызываемую перед подпиской клиента на сигналы, которые принадлежат концентратору, описанному с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />.По умолчанию <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> будет осуществлять поиск атрибутов в <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, что поможет определить, разрешено ли клиенту подписываться на вызовы методов для описанного концентратора.Функция возвращает значение true, если клиенту разрешено подписываться на вызовы клиентских методов концентратора. В противном случае функция возвращает значение false.</summary>
      <returns>Заключенная в оболочку функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</returns>
      <param name="authorizeConnect">Функция, которая определяет, разрешено ли клиенту подключаться к описанному концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnConnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при подключении клиента к концентратору.</returns>
      <param name="connect">Функция, вызываемая при подключении клиента к концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при отключении клиента от <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому был подключен клиент.По умолчанию это приводит к вызову метода OnDisconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при отключении клиента от концентратора.</returns>
      <param name="disconnect">Функция, вызываемая при отключении клиента от концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>Заключает в оболочку функцию, вызывающую метод концентратора на стороне сервера.Даже если клиенту не разрешено подключаться к концентратору, ему все равно будет разрешено вызывать методы на стороне сервера для этого концентратора, если это не предотвращено в <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" /> из-за невыполнения параметра вызова.</summary>
      <returns>Заключенная в оболочку функция, вызывающая метод концентратора на стороне сервера.</returns>
      <param name="invoke">Функция, вызывающая метод концентратора на стороне сервера.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызывающую клиентский метод концентратора.</summary>
      <returns>Заключенная в оболочку функция, вызывающая клиентский метод концентратора.</returns>
      <param name="send">Функция, вызывающая клиентский метод концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>Заключает в оболочку функцию, вызываемую при повторном подключении клиента к <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> для каждого <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />, к которому подключается клиент.По умолчанию это приводит к вызову метода OnReconnected <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />.</summary>
      <returns>Заключенная в оболочку функция, вызываемая при повторном подключении клиента к концентратору.</returns>
      <param name="reconnect">Функция, вызываемая при повторном подключении клиента к концентратору.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>Заключает в оболочку функцию, которая определяет, к какой из групп, принадлежащих концентратору, который описан с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />, следует разрешить повторное присоединение клиента.По умолчанию клиенты, которые повторно подключаются к серверу, будут удалены из всех групп, в которые они входили ранее, так как клиенты без доверия могут утверждать об участии в группах, к которым им никогда не было разрешено присоединяться.</summary>
      <returns>Заключенная в оболочку функция, которая определяет, к каким группам следует разрешить повторное присоединение клиента.</returns>
      <param name="rejoiningGroups">Функция, которая определяет, к каким группам следует разрешить повторное присоединение клиента.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>Управляет анализом входящих запросов с помощью <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> .</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>Анализирует входящие полезные данные концентратора и преобразовывает их в <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</summary>
      <returns>Полученный <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />.</returns>
      <param name="data">Необработанные полезные данные концентратора.</param>
      <param name="serializer">JsonSerializer, использованный для анализа данных.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>Сочетает, уменьшает и кэширует JavaScript концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>Уменьшает указанный источник <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</summary>
      <returns>Указанный источник <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />.</returns>
      <param name="source">Уменьшенный источник.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>Создает службу прокси для интерфейса JavaScript.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>Создает прокси для URL-адреса службы <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</summary>
      <returns>Прокси для создания URL-адреса службы <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />.</returns>
      <param name="serviceUrl">Служба URL-адреса.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>Описывает поставщик метода концентратора, который составляет коллекцию доступных методов заданного концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Извлекает все методы для заданного концентратора.</summary>
      <returns>Доступные методы.</returns>
      <param name="hub">Объект дескриптора концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Осуществляет попытку извлечь метод.</summary>
      <returns>Значение true, если метод найден.</returns>
      <param name="hub">Объект дескриптора концентратора</param>
      <param name="method">Имя метода.</param>
      <param name="descriptor">Дескриптор метода, если он найден.В противном случае — Null.</param>
      <param name="parameters">Сопоставляемые параметры метода.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>Описывает сопоставитель параметров для разрешения значений, соответствующих параметрам, на основании введенной информации.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Разрешает значения параметров метода на основании введенных объектов.</summary>
      <returns>Массив значений параметров.</returns>
      <param name="method">Дескриптор метода.</param>
      <param name="values">Список значений, на основании которого выполняется разрешение значений параметров.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>Представляет информацию об одном методе концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>Получает или задает атрибуты, связанные с этим методом.</summary>
      <returns>Атрибуты, связанные с этим методом.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>Получает объект дескриптора концентратора, являющийся целевым для данного метода.</summary>
      <returns>Объект дескриптора концентратора, являющийся целевым для данного метода.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>Получает или задает делегата вызова метода.Принимает целевой концентратор и массив аргументов вызова в качестве его аргументов.</summary>
      <returns>Делегат вызова метода.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>Получает или задает доступные параметры метода.</summary>
      <returns>Доступные параметры метода.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>Получает или задает возвращаемый тип этого метода.</summary>
      <returns>Возвращаемый тип этого метода.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>Представляет расширение методов для концентраторов SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Указывает, соответствует ли расширение метода другому дескриптору метода.</summary>
      <returns>Значение true, если расширение метода соответствует дескриптору другого метода; в противном случае — значение false.</returns>
      <param name="methodDescriptor">Дескриптор метода.</param>
      <param name="parameters">Список параметров.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>Представляет исключение, порождаемое, если клиенту не разрешено подключение к концентратору.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> с сериализованными данными.</summary>
      <param name="info">Сериализованная информация об исключении.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> с сообщением об ошибке.</summary>
      <param name="message">Сообщение об этом исключении.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> с сообщением об ошибке и внутренним исключением.</summary>
      <param name="message">Сообщение об этом исключении.</param>
      <param name="inner">Ошибка, которая вызвала исключение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>Представляет уменьшитель для JavaScript со значением NULL.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>Указывает экземпляр <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Уменьшает указанный источник JavaScript.</summary>
      <returns>Уменьшенный источник.</returns>
      <param name="source">Источник для уменьшения.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>Представляет информацию о одном параметре метода концентратора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>Получает или задает имя параметра.</summary>
      <returns>Имя параметра.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>Получает или задает тип параметра.</summary>
      <returns>Тип параметра.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>Описывает поставщика дескриптора концентратора, который предоставляет отраженную информацию о доступных концентраторах.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" />.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>Извлекает коллекцию подключения для создания кэша концентратора.</summary>
      <returns>Коллекция подключения для создания кэша концентратора.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>Принимает все доступные концентраторы. </summary>
      <returns>Коллекция доступных концентраторов.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>Осуществляет попытку извлечь концентратор с заданным именем.</summary>
      <returns>Значение true, если концентратор обнаружен; в противном случае — значение false.</returns>
      <param name="hubName">Имя извлекаемого концентратора.</param>
      <param name="descriptor">После возврата этого метода содержит извлеченный объект дескриптора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>Представляет отраженный метод для поставщика дескриптора.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>Возвращает коллекцию методов поставщика.</summary>
      <returns>Коллекция методов поставщика.</returns>
      <param name="hub">Дескриптор концентратора.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>Выполняет поиск указанного <paramref name="hub" /> для указанного <paramref name="method" />.</summary>
      <returns>Имеет значение true, если в концентраторе обнаружен метод с соответствующим именем/параметром. В противном случае имеет значение false.</returns>
      <param name="hub">Концентратор, в котором выполняется поиск указанного <paramref name="method" />.</param>
      <param name="method">Имя искомого метода.</param>
      <param name="descriptor">Разрешенный <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />, если результат успешный.</param>
      <param name="parameters">Набор параметров, который будет использован для упрощения поиска определенной перегрузки указанного <paramref name="method" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>Представляет вспомогательный объект отражения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>Получает значение атрибута для этого вспомогательного объекта.</summary>
      <returns>Значение атрибута для этого вспомогательного объекта.</returns>
      <param name="source">Источник для получения значения.</param>
      <param name="valueGetter">Получатель значения.</param>
      <typeparam name="TAttribute">Тип атрибута.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>Получает список экспортируемых методов концентратора.</summary>
      <returns>Список экспортируемых методов концентратора.</returns>
      <param name="type">Тип получаемых методов.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>Представляет сигнальный прокси, используемый концентратором.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Получает данные вызова клиентского концентратора, связанного с прокси.</summary>
      <returns>Данные вызова клиентского концентратора, связанного с прокси.</returns>
      <param name="method">Метод.</param>
      <param name="args">Аргументы.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>Возвращает или задает имя концентратора.</summary>
      <returns>Имя концентратора.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>Вызывает метод и возвращает результаты вызова метода.</summary>
      <returns>Результат операции.</returns>
      <param name="method">Вызываемый метод.</param>
      <param name="args">Массив аргументов.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>Получает или задает сигнал, связанный с <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</summary>
      <returns>Сигнал, связанный с <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Обеспечивает реализацию операций, которые получают значения членов.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Информация об объекте, который вызывает динамическую операцию.</param>
      <param name="result">Результат операции get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>Обеспечивает реализацию операций, которые вызывают член.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Предоставляет сведения о динамической операции.</param>
      <param name="args">Аргументы, передаваемые в член объекта во время операции вызова.</param>
      <param name="result">Результат вызова члена.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>Представляет словарь отслеживания изменений.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" />.</summary>
      <param name="values">Значение словаря.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>Получает изменения, связанные с отслеживанием.</summary>
      <returns>Изменения, связанные с отслеживанием.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>Получает или задает элемент, связанный с указанным ключом.</summary>
      <returns>Элемент, связанный с отслеживанием, при котором используется указанный ключ.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>Представляет сигнальный прокси с фиксацией состояния, используемый концентратором.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>Получает данные вызова клиентского концентратора, связанного с прокси.</summary>
      <returns>Данные вызова клиентского концентратора, связанного с прокси.</returns>
      <param name="method">Метод.</param>
      <param name="args">Аргументы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Обеспечивает реализацию операций, которые получают значения членов.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Информация об объекте, который вызывает динамическую операцию.</param>
      <param name="result">Результат операции get.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Обеспечивает реализацию операций, которые задают значения членов.</summary>
      <returns>Значение true, если операция выполнена успешно. В противном случае — false.</returns>
      <param name="binder">Информация об объекте, который вызывает динамическую операцию.</param>
      <param name="value">Результат операции set.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>Представляет экземпляр, который обрабатывает комплект сертификации приложений (ACK).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
      <param name="completeAcksOnTimeout">Значение true, если ACK выполнены до истечения времени ожидания; в противном случае — значение false.</param>
      <param name="ackThreshold">пороговое значение ACK.</param>
      <param name="ackInterval">Интервал ACK.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>Создает новый объект ACK.</summary>
      <returns>Созданный объект ACK.</returns>
      <param name="id">Идентификатор.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>Освобождает все ресурсы, используемые <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые данным экземпляром.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>Инициирует указанный объект ACK.</summary>
      <returns>Результат операции.</returns>
      <param name="id">Идентификатор ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>Представляет устройство чтения текста, связанное с сегментом массива.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" />.</summary>
      <param name="buffer">Буфер сегмента массива.</param>
      <param name="encoding">Кодировка.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает заданное максимальное количество символов с текущего устройства чтения и записывает данные в буфер, начиная с указанного индекса.</summary>
      <returns>Число считанных символов.</returns>
      <param name="buffer">Содержит заданный массив символов со значениями между индексом и замененными символами, считанными из текущего источника.</param>
      <param name="index">Позиция в буфере, при которой начинается запись.</param>
      <param name="count">Максимальное число символов для считывания.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" />.</summary>
      <param name="newMessageBus">Новый канал сообщений.</param>
      <param name="jsonSerializer">Сериализатор JSON.</param>
      <param name="baseSignal">Базовый сигнал.</param>
      <param name="connectionId">Идентификатор подключения.</param>
      <param name="signals">Коллекция сигналов.</param>
      <param name="groups">Коллекция групп.</param>
      <param name="traceManager">Диспетчер трассировки.</param>
      <param name="ackHandler">Обработчик ACK.</param>
      <param name="performanceCounterManager">Диспетчер счетчика производительности.</param>
      <param name="protectedData">Защищенные данные.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>Получает основной сигнал для этого подключения.</summary>
      <returns>Основной сигнал для этого подключения.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>Осуществляется при добавлении ключа событием.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>Осуществляется при удалении ключа событием.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>Получает свойство идентификатора для этого подключения.</summary>
      <returns>Свойство идентификатора для этого подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>Получает список объектов, к которым можно обращаться отдельно по индексу.</summary>
      <returns>Список объектов, к которым можно обращаться отдельно по индексу.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Получает ответное сообщение для метода подключения.</summary>
      <returns>Ответное сообщение, получаемое методом подключения.</returns>
      <param name="messageId">Идентификатор сообщения.</param>
      <param name="callback">Определяет, осуществляет ли подключение ответ на обратный вызов.</param>
      <param name="maxMessages">Максимальное количество сообщений.</param>
      <param name="state">Состояние подключения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>Отправляет сообщение одному или нескольким подключениям.</summary>
      <returns>Сообщение, отправленное одному или нескольким подключениям.</returns>
      <param name="message">Подключения, которым отправлено сообщение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>Получает или задает подписку для этого свойства подключения.</summary>
      <returns>Подписка для этого свойства подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>Получает или задает курсор для записи последовательных наборов символов.</summary>
      <returns>Курсор для записи последовательных наборов символов.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>Предоставляет реализацию <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" />.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>Возвращает <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <param name="type">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>Возвращает <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>Возвращает контекст концентратора для этого подключения.</summary>
      <returns>Контекст концентратора для этого подключения.</returns>
      <typeparam name="T">Тип концентратора.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>Возвращает контекст концентратора для этого подключения с указанным именем.</summary>
      <returns>Контекст концентратора для этого подключения.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>Предоставляет методы для защиты данных.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" />.</summary>
      <param name="provider">Поставщик защиты данных.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>Защищает указанные данные.</summary>
      <returns>Защищенные данные.</returns>
      <param name="data">Защищаемые данные.</param>
      <param name="purpose">Цель защиты.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>Удаляет защиту указанных данных.</summary>
      <returns>Незащищенные данные.</returns>
      <param name="protectedValue">Защищенные данные.</param>
      <param name="purpose">Цель защиты.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>Предоставляет методы защиты данных.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>Защищает указанные данные.</summary>
      <returns>Защищенные данные.</returns>
      <param name="data">Защищаемые данные.</param>
      <param name="purpose">Цель защиты.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>Удаляет защиту указанных данных.</summary>
      <returns>Незащищенные данные.</returns>
      <param name="protectedValue">Защищенные данные.</param>
      <param name="purpose">Цель защиты.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>Предоставляет интерфейс, который представляет экземпляр обрабатывающий комплект сертификации приложений (ACK).</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>Создает новый объект ACK.</summary>
      <returns>Созданный объект ACK.</returns>
      <param name="id">Идентификатор.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>Инициирует указанный объект ACK.</summary>
      <returns>Результат операции.</returns>
      <param name="id">Идентификатор ACK.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>Предоставляет доступ к концентраторам и ссылкам на постоянные подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>Возвращает <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" /> для <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</returns>
      <typeparam name="T">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>Возвращает информацию о концентраторе, связанную с подключением.</summary>
      <returns>Информация о концентраторе, связанная с подключением.</returns>
      <typeparam name="T">Тип концентратора.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>Возвращает информацию о концентраторе, связанную с подключением.</summary>
      <returns>Информация о концентраторе, связанная с подключением.</returns>
      <param name="hubName">Имя концентратора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>Представляет вспомогательное приложение для атомарных операций с переменными, совместно используемыми несколькими потоками.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>Сравнивает два объекта на предмет равенства ссылок и самих объектов. </summary>
      <returns>Значение true, если два объекта равны; в противном случае — значение false.</returns>
      <param name="location">Объект назначения, который сравнивается со сравниваемым операндом и, возможно, заменяется.</param>
      <param name="value">Объект, заменяющий объект назначения, если при сравнении определено равенство.</param>
      <param name="comparandA">Первый сравниваемый операнд.</param>
      <param name="comparandB">Второй сравниваемый операнд.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>Закрывает счетчик производительности и освобождает все ресурсы, выделенные этим экземпляром счетчика производительности.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>Уменьшает значение связанных счетчиков производительности на единицу посредством эффективной атомарной операции.</summary>
      <returns>Уменьшенное значение счетчика.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>Увеличивает значение связанных счетчиков производительности на единицу посредством эффективной атомарной операции.</summary>
      <returns>Увеличенное значение счетчика.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>Увеличивает или уменьшает значение связанных счетчиков производительности на заданную величину посредством эффективной атомарной операции</summary>
      <returns>Новое значение счетчика.</returns>
      <param name="value">Значение приращения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>Получает образец счетчика и возвращает его необработанное (не вычисленное) значение.</summary>
      <returns>Образец счетчика и его необработанное (не вычисленное) значение, которое возвращается.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>Получает или задает необработанное (не вычисленное) значение этого счетчика.</summary>
      <returns>Необработанное значение счетчика.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>Удаляет экземпляр категории, указанный свойством InstanceName объекта PerformanceCounter.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>Предоставляет доступ к счетчикам производительности.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, полученных подключениями (сервера или клиента).</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, полученных подключениями (сервера к клиенту) с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, отправленных подключениями (сервера или клиента).</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, отправленных подключениями (сервера или клиента) с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>Получает счетчик производительности, который представляет количество событий подключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>Получает счетчик производительности, который представляет количество текущих подключенных подключений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>Получает счетчик производительности, который представляет общее количество событий отключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>Получает счетчик производительности, который представляет общее количество событий повторного подключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>Получает счетчик производительности, который представляет количество всех ошибок, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>Получает счетчик производительности, который представляет общее количество всех ошибок, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок вызова концентратора, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок вызова концентратора, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок разрешения концентратора, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок разрешения концентратора, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок транспорта, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок транспорта, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Инициализирует счетчики производительности.</summary>
      <param name="instanceName">Имя экземпляра узла.</param>
      <param name="hostShutdownToken">Маркер отмены, представляющий завершение работы узла.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Загружает счетчик производительности.</summary>
      <param name="categoryName">Имя категории.</param>
      <param name="counterName">Имя счетчика.</param>
      <param name="instanceName">Имя экземпляра.</param>
      <param name="isReadOnly">Доступен ли счетчик только для чтения.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Получает счетчик производительности, который представляет количество рабочих процессов, выделенных для доставки сообщений в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Получает счетчик производительности, который представляет количество рабочих процессов, в данный момент участвующих в доставке сообщений в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, опубликованных в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, опубликованных в канале сообщений с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, полученных подписчиками.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, полученных подписчиками с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Получает счетчик производительности, который представляет текущее количество подписчиков на канал сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Получает счетчик производительности, который представляет количество новых подписчиков на канал сообщений в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Получает счетчик производительности, который представляет общее количество подписчиков на канал сообщений с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Получает счетчик производительности, который представляет текущее количество разделов в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок горизонтального масштабирования в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок горизонтального масштабирования с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений, полученных каналом сообщений горизонтального масштабирования в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Получает счетчик производительности, представляющий текущую длину очереди отправленных сообщений горизонтального масштабирования.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования, которые находятся в буфере.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования, которые находятся в открытом состоянии.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>Представляет интерфейс, который предоставляет методы интерфейса для шифрования дешифрования данных, связанных с инфраструктурой SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>Защищает указанные данные.</summary>
      <returns>Защищенные данные.</returns>
      <param name="data">Защищаемые данные.</param>
      <param name="purpose">Цель защиты.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>Повышает защиту определенных данных.</summary>
      <returns>Незащищенные данные.</returns>
      <param name="protectedValue">Необходимо снять защиту с защищенного значения.</param>
      <param name="purpose">Причина повышения защиты.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>Создает идентификатор сервера</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>Идентификатор сервера.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>Предоставляет интерфейс, который представляет класс, сокращающий размер строки.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>Уменьшает сроку с помощью способа, который может быть обращен данным экземпляром <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" />.</summary>
      <returns>Уменьшенное представление <paramref name="value" /> без следующих символов: , | \</returns>
      <param name="value">Уменьшаемая строка.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>Вызов данной функции указывает, что при любой последующей попытке отменить уменьшение строк, значение которых ранее было уменьшено с <paramref name="value" />, может быть возвращено значение Null.Это дает возможность очистить все внутренние структуры данных, ссылающиеся на <paramref name="value" />.</summary>
      <param name="value">Строка, которая могла быть ранее уменьшена.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>Обращает вызов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, который ранее был не менее одного раза выполнен для этого экземпляра <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> без последующих вызовов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> с тем же аргументом, что и при вызове <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, вернувшем <paramref name="value" />.</summary>
      <returns>Аргумент всех предыдущих вызовов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, вернувших <paramref name="value" />.Если ни один из вызовов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> для данного экземпляра <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> не вернул <paramref name="value" /> либо после большинства последних вызовов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />, которые вернули <paramref name="value" />, следовал вызов <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> с тем же аргументом, <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" /> может вернуть значение Null, но не должен порождать исключение.</returns>
      <param name="value">Уменьшенная строка, возвращенная при предыдущем вызове <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Управляет счетчиками производительности с помощью счетчиков производительности Windows.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
      <param name="resolver">Сопоставитель зависимостей по умолчанию.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>Указывает имя категории счетчиков производительности для этого счетчика производительности.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, полученных подключениями (сервера или клиента).</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, полученных подключениями (сервера к клиенту) с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, отправленных подключениями (сервера или клиента).</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, отправленных подключениями (сервера или клиента) с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>Получает счетчик производительности, который представляет количество событий подключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>Получает счетчик производительности, который представляет количество текущих подключенных подключений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>Получает счетчик производительности, который представляет общее количество событий отключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>Получает счетчик производительности, который представляет общее количество событий повторного подключения для подключения с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>Получает счетчик производительности, который представляет количество всех ошибок, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>Получает счетчик производительности, который представляет общее количество всех ошибок, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок вызова концентратора, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок вызова концентратора, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок разрешения концентратора, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок разрешения концентратора, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок транспорта, обработанных в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок транспорта, обработанных с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>Инициализирует счетчики производительности.</summary>
      <param name="instanceName">Имя экземпляра узла.</param>
      <param name="hostShutdownToken">Маркер отмены, представляющий завершение работы узла.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>Загружает счетчик производительности.</summary>
      <param name="categoryName">Имя категории.</param>
      <param name="counterName">Имя счетчика.</param>
      <param name="instanceName">Имя экземпляра.</param>
      <param name="isReadOnly">Значение true, если счетчик доступен только для чтения. В противном случае — значение false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>Получает счетчик производительности, который представляет количество рабочих процессов, выделенных для доставки сообщений в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>Получает счетчик производительности, который представляет количество рабочих процессов, в данный момент участвующих в доставке сообщений в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, опубликованных в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, опубликованных в канале сообщений с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений в секунду, полученных подписчиками.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>Получает счетчик производительности, который представляет общее количество сообщений, полученных подписчиками с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>Получает счетчик производительности, который представляет текущее количество подписчиков на канал сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>Получает счетчик производительности, который представляет количество новых подписчиков на канал сообщений в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>Получает счетчик производительности, который представляет общее количество подписчиков на канал сообщений с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>Получает счетчик производительности, который представляет текущее количество разделов в канале сообщений.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>Получает счетчик производительности, который представляет количество ошибок горизонтального масштабирования в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>Получает счетчик производительности, который представляет общее количество ошибок горизонтального масштабирования с момента запуска приложения.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>Получает счетчик производительности, который представляет количество сообщений, полученных каналом сообщений горизонтального масштабирования в секунду.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>Получает счетчик производительности, представляющий текущую длину очереди отправленных сообщений горизонтального масштабирования.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования, которые находятся в буфере.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования, которые находятся в открытом состоянии.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>Получает счетчик производительности, который представляет количество логических потоков в настраиваемом в данный момент поставщике канала сообщений горизонтального масштабирования.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>Задает константы назначений.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>Константа ConnectionToken.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Константа Groups.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>Задает команды сервера.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>Команда RemoveConnection.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>Реализация <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" /> по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>Получает или задает идентификатор сервера.</summary>
      <returns>Идентификатор сервера.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>Представляет значение JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>Преобразовывает значение параметра в указанный <see cref="T:System.Type" />.</summary>
      <returns>Значение преобразованного параметра.</returns>
      <param name="type">
        <see cref="T:System.Type" />, в который преобразовывается параметр.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>Преобразовывает значение параметра в указанный <see cref="T:System.Type" />.</summary>
      <returns>Значение преобразованного параметра.</returns>
      <param name="type">
        <see cref="T:System.Type" />, в который преобразовывается параметр.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>Реализации обрабатывают собственную сериализацию в JSON.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>Сериализует себя в JSON с помощью <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" />, который принимает сериализованный объект JSON.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary> Расширения для <see cref="T:Newtonsoft.Json.JsonSerializer" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>Десериализует JSON в объект .NET.</summary>
      <returns>Десериализованный объект из строки JSON.</returns>
      <param name="serializer">Сериализатор</param>
      <param name="jsonBuffer">Буфер JSON для десериализации</param>
      <param name="encoding">Используемая кодировка.</param>
      <typeparam name="T">
        <see cref="T:System.Type" /> десериализуемого объекта.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>Десериализует JSON в объект .NET.</summary>
      <returns>Десериализованный объект из строки JSON.</returns>
      <param name="serializer">Сериализатор</param>
      <param name="json">JSON для десериализации</param>
      <typeparam name="T">
        <see cref="T:System.Type" /> десериализуемого объекта.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>Сериализует указанный объект в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="serializer">Сериализатор JSON</param>
      <param name="value">Объект для сериализации</param>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> для сериализации объекта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>Сериализует указанный объект в строку JSON.</summary>
      <returns>Строка JSON, представляющая объект.</returns>
      <param name="serializer">Сериализатор</param>
      <param name="value">Объект для сериализации.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> Вспомогательный класс для общий операций JSON. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>Преобразовывает указанное имя в «верблюжий» стиль.</summary>
      <returns>Значение указанного <paramref name="name" /> в «верблюжьем» стиле.</returns>
      <param name="name">Преобразуемое значение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>Создает экземпляр <see cref="T:Newtonsoft.Json.JsonSerializer" /> с настройками по умолчанию.</summary>
      <returns>Новый созданный <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>Создает экземпляр <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> по умолчанию.</summary>
      <returns>Новый созданный <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>Создает обратный вызов JSONP.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий обратный вызов.</returns>
      <param name="callback">Создаваемый обратный вызов.</param>
      <param name="payload">Полезные данные.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Получает тип MIME для JavaScript.</summary>
      <returns>Тип MIME для JavaScript.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>Получает тип MIME этой служебной программы JSON.</summary>
      <returns>Тип MIME этой служебной программы JSON.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>Представляет команды, используемые при отправке сообщений SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" />.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>Получает или задает тип команд.</summary>
      <returns>Тип команд.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>Получает или задает идентификатор команды.</summary>
      <returns>Идентификатор команды.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>Получает или задает значение команды.</summary>
      <returns>Значение команды.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>Получает или задает, ожидает ли команда сертификации перед выполнением.</summary>
      <returns>Значение true, если команда ожидает сертификацию перед выполнением; в противном случае — значение false.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>Перечисляет команды для сообщения подключения.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>Указывает команду для инициализации подключения.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>Предоставляет методы, используемые для публикации сообщений и подписывания на сообщения из канала сообщений SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Задает подписку на разделы для подписчика канала сообщений.</summary>
      <returns>Состояние подписки.</returns>
      <param name="subscriber">Подписчик.</param>
      <param name="cursor">Курсор чтения, указывающий задачи для подписки.</param>
      <param name="callback">Функция обратного вызова.</param>
      <param name="maxMessages">Размер буфера сообщений.</param>
      <param name="state">Состояние операции обратного вызова.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>Предоставляет сведения о подписчике канала сообщений SignalR.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>Получает или задает подписку.</summary>
      <returns>Подписка.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>Получает или задает курсор записи.</summary>
      <returns>Курсор записи.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>Предоставляет методы для выполнения задач и контроля состояния подписки.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>Получает или задает идентификатор подписки.</summary>
      <returns>Идентификатор подписки.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>Задает рабочее состояние подписки.</summary>
      <returns>Значение true, если задано рабочее состояние подписки; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>Задает состояние бездействия подписки.</summary>
      <returns>Значение true, если задано состояние бездействия подписки; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>Выполняет обработку подписанного сообщения посредством этой подписки.</summary>
      <returns>Задача, представляющая операцию с подписанным сообщением.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" />.</summary>
      <param name="key">Ключ, связанный с локальным событием.</param>
      <param name="id">Идентификатор, связанный со сведениями о ключе.</param>
      <param name="store">Хранилище сообщений, связанное с ключом локального события.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>Получает или задает идентификатор, связанный со сведениями о ключе.</summary>
      <returns>Идентификатор, связанный со сведениями о ключе.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>Получает или задает ключ, связанный с локальным событием.</summary>
      <returns>Ключ, связанный с локальным событием.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>Получает сообщение для ключа.</summary>
      <returns>Сообщение для ключа.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" />.</summary>
      <param name="source">Источник сообщения.</param>
      <param name="key">Ключ сообщения.</param>
      <param name="value">Значение сообщения.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>Получает или задает идентификатор команды сообщения.</summary>
      <returns>Идентификатор команды сообщения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>Кодировка сообщения</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>Получает или задает фильтр сообщений.</summary>
      <returns>Фильтр сообщений.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>Получает или задает значение, указывающее, является ли сообщение сообщением подтверждения.</summary>
      <returns>Значение true, если сообщение является сообщением подтверждения; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>Получает значение, указывающее, является ли сообщение сообщением команды.</summary>
      <returns>Значение true, если сообщение является сообщением команды; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>Получает или задает ключ для сообщения.</summary>
      <returns>Ключ для сообщения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>Идентификатор полезных данных.Используется только в сценариях горизонтального масштабирования.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>Получает или задает источник сообщения.</summary>
      <returns>Источник сообщения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>Индекс потока, из которого пришло данное сообщение.Использует только сценарии горизонтального масштабирования.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>Получает или задает значение сообщения.</summary>
      <returns>Значение сообщения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>Получает или задает значение, указывающее, ожидает ли сообщение подтверждения.</summary>
      <returns>Значение true, если сообщение ожидает подтверждения; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>Планирует выполняемые операции для определенной подписки и использует алгоритм выбора количества рабочих потоков (потоков пула потоков) для обработки запланированной работы.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="performanceCounterManager">Диспетчер счетчика производительности.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>Освобождает все ресурсы, используемые перечислителем <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>Освобождает все ресурсы, используемые перечислителем <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />.</summary>
      <param name="disposing">Значение true, чтобы освободить управляемые и неуправляемые ресурсы; значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Планирует операции с указанной подпиской.</summary>
      <param name="subscription">Планируемая подписка.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>Получает или задает источник трассировки агента.</summary>
      <returns>Источник трассировки агента.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>Представляет канал сообщений для SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Создает новую подписку для подписчика.</summary>
      <returns>Новая подписка.</returns>
      <param name="subscriber">Подписчик.</param>
      <param name="cursor">Курсор чтения, указывающий задачи для подписки.</param>
      <param name="callback">Функция обратного вызова.</param>
      <param name="messageBufferSize">Размер буфера сообщений.</param>
      <param name="state">Состояние операции обратного вызова.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Задает подписку на разделы для подписчика канала сообщений.</summary>
      <returns>Состояние подписки.</returns>
      <param name="subscriber">Подписчик.</param>
      <param name="cursor">Курсор чтения, указывающий задачи для подписки.</param>
      <param name="callback">Функция обратного вызова.</param>
      <param name="maxMessages">Размер буфера сообщений.</param>
      <param name="state">Состояние операции обратного вызова.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>Получает источник трассировки, используемый для трассировки выполнения кода.</summary>
      <returns>Источник трассировки, используемый для трассировки выполнения кода.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>Предоставляет методы расширения для канала сообщений SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>Перечисляет сообщения.</summary>
      <param name="messages">Список сообщений для перечисления.</param>
      <param name="filter">Метод, который фильтрует перечисляемые сообщения.</param>
      <param name="onMessage">Метод, который обрабатывает каждое перечисляемое сообщение.</param>
      <param name="state">Объект, представляющий состояние операции.</param>
      <typeparam name="T">Тип параметра <paramref name="state" />.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>Представляет результат сообщения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="terminal">Значение true указывает, что этот результат сообщения является конечным. В противном случае — значение false.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</summary>
      <param name="messages">Массив сообщений, связанных с этим <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />.</param>
      <param name="totalCount">Количество сообщений, добавленных в массив сообщений.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>Получает <see cref="T:System.Collections.Generic.IList`1" />, связанный с результатом.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IList`1" />, связанный с результатом.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>Получает или задает значение, указывающее, является ли этот результат сообщения конечным.</summary>
      <returns>Значение true, если этот результат сообщения является конечным; в противном случае — значение false.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>Указывает, является ли этот результат сообщения конечным.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>Получает или задает количество сообщений, добавленных в массив сообщений.</summary>
      <returns>Количество сообщений, добавленных в массив сообщений.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>Представляет хранилище сообщений, обеспечиваемое кольцевым буфером.</summary>
      <typeparam name="T">Тип элементов в хранилище.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> с указанной емкостью.</summary>
      <param name="capacity">Минимальная емкость хранилища.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" />.</summary>
      <param name="capacity">Минимальная емкость хранилища.</param>
      <param name="offset">Смещение первого сообщения в хранилище.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>Добавляет сообщение в хранилище и возвращает идентификатор добавленного нового сообщения.</summary>
      <returns>Идентификатор добавленного нового сообщения.</returns>
      <param name="message">Добавляемое сообщение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>Получает количество сообщений в хранилище.</summary>
      <returns>Количество сообщений в хранилище.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>Получает следующий пакет сообщений, начиная с указанного идентификатора. </summary>
      <returns>Следующий пакет сообщений.</returns>
      <param name="firstMessageId">Первый идентификатор сообщения.</param>
      <param name="maxMessages">Максимальное количество возвращаемых сообщений.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>Представляет результат, связанный с хранилищем сообщений.</summary>
      <typeparam name="T">Тип результата.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" />.</summary>
      <param name="firstMessageId">Идентификатор первого сообщения.</param>
      <param name="messages">Сообщение, связанное с результатом.</param>
      <param name="hasMoreData">Значение true, если результат содержит больше данных; в противном случае — значение false.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>Получает идентификатор первого сообщения.</summary>
      <returns>Идентификатор первого сообщения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>Получает значение, содержит ли результат больше данных.</summary>
      <returns>Значение true, если результат содержит больше данных; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>Получает сообщение, связанное с результатом.</summary>
      <returns>Сообщение, связанное с результатом.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>Представляет общие настройки реализации канала сообщений горизонтального масштабирования.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" />.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>Очередь в данный момент отключена.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>Получает или задает максимальную длину очереди исходящих отправлений.</summary>
      <returns>Максимальная длина очереди исходящих отправлений.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>Представляет общий базовый класс для реализации масштабируемых каналов сообщений.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">Индекс закрываемого потока.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>Закрывает указанную очередь отправки сообщений, асинхронно выполняя неудачную попытку отправки.</summary>
      <param name="streamIndex">Индекс закрываемого потока.</param>
      <param name="exception">Возникшая ошибка.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>Вызывается при получении полезных данных от объединительной платы.Всегда должен выполняться только один активный вызов.</summary>
      <param name="streamIndex">Идентификатор потока.</param>
      <param name="id">Идентификатор полезных данных в этом потоке.</param>
      <param name="message">Сообщение горизонтального масштабирования.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">Индекс открываемого потока.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>Публикует сообщение из масштабируемого канала сообщений.</summary>
      <returns>Задача, представляющая операцию публикации сообщения.</returns>
      <param name="message">Публикуемое сообщение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Отправляет сообщения из масштабируемого канала сообщений SignalR.</summary>
      <returns>Задача, представляющая операцию отправки сообщения.</returns>
      <param name="messages">Отправляемые сообщения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>Число потоков не может изменяться на протяжении всего существования этого экземпляра.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>Представляет масштабированную подписку.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" />.</summary>
      <param name="identity">Идентификатор подписки.</param>
      <param name="eventKeys">Ключи событий для подписки.</param>
      <param name="cursor">Курсор записи.</param>
      <param name="streams">Потоки, используемые для сопоставления с курсорами записи.</param>
      <param name="callback">Функция обратного вызова, которая выполняет изменение состояния подписки.</param>
      <param name="maxMessages">Максимальное количество сообщений, выделенных для этой подписки.</param>
      <param name="counters">Объект, используемый для доступа к счетчикам производительности подписки.</param>
      <param name="state">Состояние подписки.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>Записывает курсор с помощью указанного модуля записи текста.</summary>
      <param name="textWriter">Модуль записи текста, используемый для записи курсора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>Представляет реализацию класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" />.</summary>
      <param name="identity">Идентификатор подписки.</param>
      <param name="eventKeys">Список, содержащий ключи событий для подписки.</param>
      <param name="callback">Функция обратного вызова, которая выполняет изменение состояния подписки.</param>
      <param name="maxMessages">Максимальное количество сообщений, выделенных для этой подписки.</param>
      <param name="counters">Объект, используемый для доступа к счетчикам производительности подписки.</param>
      <param name="state">Состояние подписки.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>Получает или задает метод, используемый для ликвидации ресурсов подписки.</summary>
      <returns>Метод, используемый для ликвидации ресурсов подписки.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>Записывает курсор с помощью указанного модуля записи текста.</summary>
      <param name="textWriter">Модуль записи текста, используемый для записи курсора.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>Представляет раздел в канале сообщений SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" />.</summary>
      <param name="storeSize">Размер хранилища сообщений.</param>
      <param name="lifespan">Интервал существования раздела.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Добавляет указанную подписку в список.</summary>
      <param name="subscription">Добавляемая подписка.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>Получает значение, указывающее, истек ли срок действия раздела.</summary>
      <returns>Значение true, если срок действия раздела истек. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>Получает или задает время последнего использования подписки.</summary>
      <returns>Время последнего использования подписки.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>Удаляет указанную подписку из списка.</summary>
      <param name="subscription">Удаляемая подписка.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>Получает или задает хранилище сообщений.</summary>
      <returns>Хранилище сообщений.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>Получает или задает объект, который используется для блокирования раздела.</summary>
      <returns>Объект, который используется для блокирования раздела.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>Получает или задает список, содержащий подписки на раздел.</summary>
      <returns>Список, содержащий подписки на раздел.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>Представляет коллекцию разделов, используемых при поиске.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>Удаляет все разделы из коллекции.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>Определяет, содержится ли в коллекции раздел с указанным ключом.</summary>
      <returns>Значение true, если коллекция содержит раздел с указанным ключом. В противном случае — значение false.</returns>
      <param name="key">Ключ раздела.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>Получает количество всех (общих и групповых) разделов в коллекции.</summary>
      <returns>Количество всех (общих и групповых) разделов в коллекции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>Получает перечислитель, который выполняет итерацию по коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно выполнять итерацию по коллекции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>Добавляет раздел в коллекцию с помощью указанной функции, если ключ еще не существует.</summary>
      <returns>Созданный раздел для указанного ключа.</returns>
      <param name="key">Ключ добавляемого раздела.</param>
      <param name="factory">Функция, используемая для создания раздела для ключа.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>Получает раздел с указанным ключом.</summary>
      <returns>Раздел с указанным ключом, если он найден. Если раздел не найден — значение NULL.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>Получает перечислитель, который выполняет итерацию по коллекции.</summary>
      <returns>Перечислитель, с помощью которого можно выполнять итерацию по коллекции.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>Выполняет попытку получить из коллекции раздел с указанным ключом.</summary>
      <returns>Значение true, если ключ найден. В противном случае — значение false.</returns>
      <param name="key">Получаемый ключ.</param>
      <param name="topic">После возврата этого метода содержит извлеченный раздел.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>Выполняет попытку удалить и вернуть из коллекции раздел с указанным ключом.</summary>
      <returns>Удаленный раздел.</returns>
      <param name="key">Ключ удаляемого раздела.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>Представляет запрос сервера.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" />.</summary>
      <param name="environment">Среда.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>Получает файлы cookie, связанные с сервером.</summary>
      <returns>Файлы cookie, связанные с сервером.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>Получает заголовки, связанные с запросом.</summary>
      <returns>Заголовки, связанные с запросом.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>Получает коллекцию переменных строки запроса сервера.</summary>
      <returns>Коллекция переменных строки запроса сервера.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>Получает информацию об URL-адресе текущего запроса.</summary>
      <returns>Объект <see cref="T:System.Uri" />, содержащий информацию об URL-адресе текущего запроса.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>Получает пользователя для данного сервера.</summary>
      <returns>Пользователь для данного сервера.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>Представляет обратную связь сервера в ответ на запрос.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" />.</summary>
      <param name="environment">Среда.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>Получает маркер отмены, связанный с ответом.</summary>
      <returns>Маркер отмены, связанный с ответом.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>Получает или задает тип содержимого, связанного с ответом.</summary>
      <returns>Тип содержимого, связанного с ответом.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>Очищает этот экземпляр.</summary>
      <returns>Очищенный экземпляр.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>Записывает ответ, используя связанный сегмент массива.</summary>
      <param name="data">Сегмент массива.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>Представляет ПО промежуточного слоя для постоянного подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>Представляет интерфейс, предоставляющий свойства для трассировки исполнения кода.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>Получает <see cref="T:System.Diagnostics.TraceSource" /> с указанным именем источника.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" /> с указанным именем источника.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>Получает переключатель, который контролирует трассировку выполнения кода и результат отладки.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>Предоставляет свойства, которые позволяют вам трассировать выполнение кода.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>Получает <see cref="T:System.Diagnostics.TraceSource" /> с указанным именем источника.</summary>
      <returns>
        <see cref="T:System.Diagnostics.TraceSource" /> с указанным именем источника.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>Получает переключатель, который контролирует трассировку выполнения кода и результат отладки.</summary>
      <returns>Объект <see cref="T:System.Diagnostics.SourceSwitch" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Представляет Forever Frame Transport.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Инициализирует объект ответа.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий операцию ответа инициализации.</returns>
      <param name="connection">Подключение транспорта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>Проверяет активность подключения.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий операцию проверки активности.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>Получает модуль записи текста HTML, который записывает ответ контекста для выходного потока.</summary>
      <returns>Модуль записи текста HTML, который записывает ответ контекста для выходного потока.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Отправляет указанный ответ контекста.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, представляющий операцию отправки.</returns>
      <param name="response">Отправляемый ответ.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="jsonSerializer">JsonSerializer.</param>
      <param name="heartbeat">Пульс транспорта.</param>
      <param name="performanceCounterWriter">Модуль записи счетчиков производительности.</param>
      <param name="traceManager">Диспетчер трассировки.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>Получает или задает функцию подключения для <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Функция подключения для <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Предоставляет операцию постановки в очередь для транспортов.</summary>
      <returns>Операция постановки в очередь для транспортов.</returns>
      <param name="writeAsync">Асинхронная запись.</param>
      <param name="state">Объект состояния.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>Инициализирует постоянное состояние непрерывного транспорта.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Инициализирует ответ подключения непрерывного транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Подключение транспорта.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>Получает JsonSerializer для непрерывного транспорта.</summary>
      <returns>JsonSerializer для непрерывного транспорта.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>Получает последний идентификатор сообщения для непрерывного транспорта.</summary>
      <returns>Последний идентификатор сообщения для непрерывного транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>Предоставляет полезные данные для отправляющего транспорта.</summary>
      <param name="payload">Строковые полезные данные.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Предоставляет ответ для методов отправки.</summary>
      <param name="response">Ответ на подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Предоставляет подключение для обработки запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Подключение транспорта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Предоставляет запрос на обработку подключения для транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="connection">Подключение транспорта.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>Получает или задает получаемую функцию для непрерывного транспорта.</summary>
      <returns>Получаемая функция для непрерывного транспорта.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>Получает или задает повторно подключенную функцию для непрерывного транспорта.</summary>
      <returns>Повторно подключенная функция для непрерывного транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Отправляет ответ на подключение для непрерывного транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="response">Постоянный ответ.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>Отправляет объект в непрерывный транспорт.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="value">Отправляемое значение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>Получает или задает подключенный транспорт для <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</summary>
      <returns>Подключенный транспорт для <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary> Представляет подключение, которое может быть отслежено с помощью <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> Применяет новое состояние к подключению. </summary>
      <param name="states">Одно из значений перечисления <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>Представляет транспорт, который обменивается данными</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>Получает или задает обратный вызов, вызываемый при первоначальном подключении к транспорту.</summary>
      <returns>Возвращает значение <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>Получает или задает идентификатор транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>Получает или задает обратный вызов, вызываемый при отключении транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Обрабатывает указанное <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" /> для этого транспорта.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая выполняется при завершении обработки подключения транспортом.</returns>
      <param name="connection">Обрабатываемое <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>Получает или задает обратный вызов, вызываемый при получении данных транспортом.</summary>
      <returns>Возвращает значение <see cref="T:System.Func`2" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>Получает или задает обратный вызов, вызываемый при повторном подключении транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>Передает данные через транспорт.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая выполняется после завершения отправки.</returns>
      <param name="value">Отправляемое значение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>Получает или задает обратный вызов, вызываемый при подключении транспорта.</summary>
      <returns>Возвращает значение <see cref="T:System.Func`1" />.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>Представляет транспорт для подключения.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>Получает данные подписки из транспорта.</summary>
      <returns>Данные подписки из транспорта.</returns>
      <param name="messageId">Идентификатор сообщения для подписки.</param>
      <param name="callback">Метод, который обрабатывает полученное сообщение.</param>
      <param name="maxMessages">Размер буфера сообщений.</param>
      <param name="state">Состояние подключения транспорта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>Управляет отслеживанием состояния подключений.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Добавляет новое подключение в список отслеживаемых подключений.</summary>
      <returns>Замененное им подключение, если оно существовало.</returns>
      <param name="connection">Добавляемое подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>Получает список отслеживаемых подключений.</summary>
      <returns>Список подключений.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Помечает существующее подключение как активное.</summary>
      <param name="connection">Помечаемое подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Удаляет подключение из списка отслеживаемых подключений.</summary>
      <param name="connection">Удаляемое подключение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>Управляет транспортами для подключений.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Получает указанный транспорт для указанного <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> для <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> для текущего запроса.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>Определяет, поддерживается ли указанный транспорт.</summary>
      <returns>Значение true, если транспорт поддерживается; в противном случае — значение false.</returns>
      <param name="transportName">Имя проверяемого транспорта.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>Получает или задает подключенную функцию.</summary>
      <returns>Подключенная функция.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>Получает пороговое значение отключения.</summary>
      <returns>Пороговое значение отключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>Получает значение, указывающее, поддерживает ли транспорт запрос подключения.</summary>
      <returns>Значение true, если транспорт поддерживает запрос подключения. В противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Обрабатывает запрос подключения.</summary>
      <returns>Задача, представляющая операцию запроса.</returns>
      <param name="connection">Обрабатываемое подключение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>Получает или задает полученную функцию.</summary>
      <returns>Полученная функция.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>Получает или задает повторно подключенный транспорт.</summary>
      <returns>Задача, которая повторно подключает транспорт.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Отправляет ответ для транспорта.</summary>
      <returns>Задача, представляющая операцию отправки запроса.</returns>
      <param name="response">Отправляемый ответ.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>Отправляет долго отпрашивающий транспорт с заданным значением.</summary>
      <returns>Задача, представляющая операцию отправки долго опрашивающего транспорта.</returns>
      <param name="value">Значение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>Получает значение, указывающее, поддерживает ли транспорт проверку активности.</summary>
      <returns>Значение true, если транспорт поддерживает проверку активности; в противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>Получает или задает подключенный транспорт.</summary>
      <returns>Задача, которая подключает транспорт.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> Представляет ответ на подключение. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>Создает новый экземпляр <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />.</summary>
      <param name="exclude">Фильтр, который определяет, следует ли писать сообщения клиенту.</param>
      <param name="writeCursor">Модуль записи курсора.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>Получает или задает значение, указывающее, было ли подключение закрыто принудительно.</summary>
      <returns>Значение true, если подключение закрыто принудительно. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>Получает или задает значение, указывающее, получена ли подключением команда Disconnect.</summary>
      <returns>Значение true, если подключение получило команду Disconnect. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>Получает или задает подписанный маркер, представляющий список групп.</summary>
      <returns>Группы маркера.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>Значение true, если подключение находится в процессе инициализации.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>Получает или задает время ожидания для долго опрашивающего клиента перед тем, как повторно установить подключение, если данные не были получены.</summary>
      <returns>Время ожидания для долго опрашивающего клиента перед тем, как повторно установить подключение, если данные не были получены.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>Получает или задает список сообщений, отправляемых в получающее подключение.</summary>
      <returns>Список сообщений, отправляемых в получающее подключение.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>Сериализует только необходимые компоненты <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> в JSON с помощью Json.NET JsonTextWriter для повышения производительности.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" />, который принимает сериализацию JSON.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>Значение true, если клиенту следует попытаться подключиться повторно.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>Получает или задает общее количество сообщений, отправленных в получающее подключение.</summary>
      <returns>Общее количество сообщений, отправленных в получающее подключение.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>Предоставляет транспорт для отправки событий с сервера  SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="resolver">Сопоставитель IDependency.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Инициализирует ответ <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</summary>
      <returns>Ответ инициализации <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />.</returns>
      <param name="connection">Инициализация подключения транспорта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>Возвращает метод проверки активности для установки постоянного подключения к Интернет-ресурсу.</summary>
      <returns>Метод проверки активности для установки постоянного подключения к Интернет-ресурсу.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Отправляет постоянный ответ <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</summary>
      <returns>Постоянный ответ, отправляемый <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />.</returns>
      <param name="response">Постоянный ответ.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>Перечисляет атрибуты TransportConnectionState.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>Прерванное подключение состояния.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>Добавленное подключение состояния.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>Разъединенное подключение состояния.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>Полученное сообщение состояния о разъединении.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>Удаленное подключение состояния.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>Завершенный HTTP-запрос состояния подключения.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>Состояние отсутствия подключения.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>Истощенная очередь состояния подключения.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>Удаленное подключение состояния.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>Замененное подключение состояния.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="heartbeat">Пульс транспорта.</param>
      <param name="performanceCounterManager">Диспетчер счетчика производительности.</param>
      <param name="traceManager">Диспетчер трассировки.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>Прерывает процесс текущей задачи для <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Прерываемый процесс текущей задачи для <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>Прерывает процесс текущей задачи для <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
      <returns>Прерываемый процесс текущей задачи для <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</returns>
      <param name="clean">Указывает, следует ли очистить все задачи в прерванном процессе.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>Применяет состояние подключения транспорта для базы отключения.</summary>
      <param name="states">Состояния подключения транспорта.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>Получает маркер отмены, который представляет время существования подключения.</summary>
      <returns>Маркер отмены, который представляет время существования подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>Получает или задает подключение транспорта для базы отключения транспорта.</summary>
      <returns>Подключение транспорта для базы отключения транспорта.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>Получает подключение для завершения операции с данным маркером.</summary>
      <returns>Подключение для завершения операции с данным маркером.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>Получает или задает идентификатор подключения.</summary>
      <returns>Строка, содержащая идентификатор подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>Получает контекст узла, связанный с базой отключения транспорта.</summary>
      <returns>Контекст узла, связанный с базой отключения транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>Представляет модуль записи для создания ответа для базы отключения транспорта.</summary>
      <returns>Модуль записи для создания ответа для базы отключения транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>Вызывает отключение подключения.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>Получает или задает свойство Disconnected для транспортов подключения.</summary>
      <returns>Свойство Disconnected для транспортов подключения.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>Получает интервал времени ожидания после разрыва подключения перед инициированием его отключения.</summary>
      <returns>Возвращает значение <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>Освобождает все ресурсы, использованные текущим экземпляром класса <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>Разрывает подключение.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>Представляет объект для завершения операции постановки в очередь.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="writeAsync">Выполняет асинхронную запись.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>Представляет объект для завершения операции постановки в очередь.</summary>
      <returns>Объект, представляющий завершение операцию постановки в очередь.</returns>
      <param name="writeAsync">Выполняет асинхронную запись.</param>
      <param name="state">Состояние.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>Получает пульс транспорта для управления состоянием отслеживания подключений.</summary>
      <returns>Пульс транспорта для управления состоянием отслеживания подключений.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>Увеличивает количество ошибок для базы отключения транспорта.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>Инициализирует постоянное состояние для базы отключения транспорта.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>Получает значение, которое представляет подключение, создающее запрос прерывания.</summary>
      <returns>Значение true, если подключение создает запрос прерывания. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>Получает значение, которое указывает, существует ли подключение.</summary>
      <returns>Значение true, если подключение активно. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>Получает значение, которое указывает, создают ли подключения запрос.</summary>
      <returns>Значение true, если подключения создают запрос. В противном случае — значение false.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>Получает значение, которое указывает, истекло ли время ожидания подключения.</summary>
      <returns>Значение true, если срок действия подключения истек. В противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>Отправляет пакет проверки активности.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>Получает модуль записи выходных данных, который может записать последовательные наборы символов.</summary>
      <returns>Модуль записи выходных данных, который может записать последовательные наборы символов.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>Получает значение, которое указывает, поддерживает ли транспорт проверку активности.</summary>
      <returns>Значение true, если транспорт поддерживает проверку активности; в противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>Вызывает истечение времени ожидания подключения.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>Получает источник для отслеживания выполнения кода и сопоставления сообщений трассировки с их источником.</summary>
      <returns>Источник для отслеживания выполнения кода и сопоставления сообщений трассировки с их источником.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>Получает универсальный код ресурса (URI) подключения.</summary>
      <returns>Универсальный код ресурса (URI) подключения.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>Предоставляет реализацию <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" /> по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Добавляет новое подключение в список отслеживаемых подключений.</summary>
      <param name="connection">Добавляемое подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>Освобождает все ресурсы, использованные текущим экземпляром класса <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>Получает список отслеживаемых подключений.</summary>
      <returns>Список подключений.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Помечает существующее подключение как активное.</summary>
      <param name="connection">Помечаемое подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>Удаляет подключение из списка отслеживаемых подключений.</summary>
      <param name="connection">Удаляемое подключение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>Реализация <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" /> по умолчанию.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" />.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" /> по умолчанию.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>Получает указанный транспорт для указанного <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" /> для <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />.</returns>
      <param name="hostContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> для текущего запроса.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>Добавляет новый транспорт в список поддерживаемых транспортов.</summary>
      <param name="transportName">Указанный транспорт.</param>
      <param name="transportFactory">Метод фабрики для указанного транспорта.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>Удаляет транспорт из списка поддерживаемых транспортов.</summary>
      <param name="transportName">Указанный транспорт.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>Определяет, поддерживается ли указанный транспорт.</summary>
      <returns>Значение true, если транспорт поддерживается; в противном случае — значение false.</returns>
      <param name="transportName">Имя проверяемого транспорта.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>Содержимое здесь не обновляется; не добавляйте сюда материал.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" />.</summary>
      <param name="context">Контекст узла.</param>
      <param name="resolver">Сопоставитель зависимостей.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>Получает маркер отмены, используемый для транспорта.</summary>
      <returns>Маркер отмены, используемый для транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>Получает значение, указывающее, активен ли транспорт.</summary>
      <returns>Значение true, если транспорт активен. В противном случае — значение false.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>Проверяет активность транспорта.</summary>
      <returns>Задача, проверяющая активность транспорта.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>Обрабатывает запрос подключения.</summary>
      <returns>Задача, представляющая операцию запроса подключения.</returns>
      <param name="connection">Подключение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>Отправляет ответ веб-сокета.</summary>
      <returns>Задача, представляющая операцию отправки запроса.</returns>
      <param name="response">Отправляемый ответ.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>Отправляет значение транспорта.</summary>
      <returns>Задача, представляющая операцию отправки значения транспорта.</returns>
      <param name="value">Отправляемое значение.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>Представляет экземпляр, который управляет веб-сокетами SignalR.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>Закрывает экземпляр.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>Получает или задает ошибку во время обработки веб-сокетов.</summary>
      <returns>Ошибка во время обработки веб-сокетов.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>Получает максимальный размер входящего сообщения.</summary>
      <returns>Максимальный размер входящего сообщения.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>Происходит, когда экземпляр закрыт.</summary>
      <param name="clean">Значение true, чтобы очистить трассировку.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>Вызывает событие, когда возникает ошибка во время операции обработки.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>Вызывает событие при получении сообщения.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>Вызывает событие при получении сообщения.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>Вызывает событие, когда открывается этот экземпляр.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>Асинхронно обрабатывает запрос, полученный обработчиком.</summary>
      <returns>Результат операции.</returns>
      <param name="webSocket">Веб-сокет.</param>
      <param name="disconnectToken">Маркер разъединения.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>Отправляет сообщение, связанное с обработчиком.</summary>
      <returns>Отправленное сообщение.</returns>
      <param name="message">Отправляемое сообщение.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>Получает или задает веб-сокет.</summary>
      <returns>Веб-сокет.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Представляет подключение для расширений OWIN.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>Сопоставляет концентраторы SignalR с конвейером конструктора приложений в «/signalr».</summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Сопоставляет концентраторы SignalR с конвейером конструктора приложений в «/signalr».</summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
      <param name="configuration">
        <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> для использования </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>Сопоставляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR с конвейером конструктора приложений по указанному пути. </summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
      <param name="path">  Путь для сопоставления <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <typeparam name="TConnection">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Сопоставляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR с конвейером конструктора приложений по указанному пути. </summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
      <param name="path">Путь для сопоставления постоянного подключения.</param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /></param>
      <typeparam name="TConnection">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Сопоставляет концентраторы SignalR с конвейером конструктора приложений по указанному пути.</summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
      <param name="path">Путь для сопоставления концентраторов SignalR.</param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /></param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Сопоставляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> с конвейером конструктора приложений по указанному пути. </summary>
      <returns>Возвращает значение <see cref="T:Owin.IAppBuilder" />.</returns>
      <param name="builder">Конструктор приложений.</param>
      <param name="path">Путь для сопоставления постоянного подключения.</param>
      <param name="connectionType">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /></param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>Добавляет концентраторы SignalR в конвейер конструктора приложений.</summary>
      <param name="builder">Конструктор приложений.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>Добавляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR в конструктор приложений. </summary>
      <param name="builder">Конструктор приложений.</param>
      <typeparam name="TConnection">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">Конструктор приложений.</param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /></param>
      <typeparam name="TConnection">  Добавляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR в конструктор приложений. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>Добавляет концентраторы SignalR в конвейер конструктора приложений.</summary>
      <param name="builder">Конструктор приложений.</param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /></param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>Добавляет указанное <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> SignalR в конструктор приложений. </summary>
      <param name="builder">Конструктор приложений.</param>
      <param name="connectionType">Тип <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /></param>
      <param name="configuration">Используемая <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /></param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>